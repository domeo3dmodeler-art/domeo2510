'use client';

import React, { useState } from 'react';
import { BaseElement } from '../types';

interface AccordionProps {
  element: BaseElement;
  onUpdate: (updates: Partial<BaseElement>) => void;
}

interface AccordionItem {
  id: string;
  title: string;
  content: string;
  isOpen?: boolean;
}

export function Accordion({ element, onUpdate }: AccordionProps) {
  // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ –∏–∑ props –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
  const [items, setItems] = useState<AccordionItem[]>(
    element.props.items || [
      {
        id: '1',
        title: '–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä?',
        content: '–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä —á–µ—Ä–µ–∑ –Ω–∞—à —Å–∞–π—Ç, –∑–∞–ø–æ–ª–Ω–∏–≤ —Ñ–æ—Ä–º—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä–∞, –∏–ª–∏ —Å–≤—è–∑–∞–≤—à–∏—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.',
        isOpen: false
      },
      {
        id: '2',
        title: '–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?',
        content: '–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –æ–ø–ª–∞—Ç—É –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏, –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –±–µ–∑–Ω–∞–ª–∏—á–Ω—ã–º —Ä–∞—Å—á–µ—Ç–æ–º –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü.',
        isOpen: false
      },
      {
        id: '3',
        title: '–ö–∞–∫ –¥–æ–ª–≥–æ –¥–ª–∏—Ç—Å—è –¥–æ—Å—Ç–∞–≤–∫–∞?',
        content: '–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–µ–≥–∏–æ–Ω–∞ –∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –æ—Ç 1 –¥–æ 7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. –¢–æ—á–Ω—É—é –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä.',
        isOpen: false
      }
    ]
  );

  const toggleItem = (itemId: string) => {
    setItems(prevItems => 
      prevItems.map(item => ({
        ...item,
        isOpen: item.id === itemId ? !item.isOpen : (element.props.allowMultiple ? item.isOpen : false)
      }))
    );
  };

  return (
    <div className="w-full h-full bg-white p-6 overflow-auto">
      <div className="max-w-2xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
        {element.props.title && (
          <div className="text-center mb-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-2">
              {element.props.title}
            </h2>
            {element.props.subtitle && (
              <p className="text-gray-600">{element.props.subtitle}</p>
            )}
          </div>
        )}

        {/* –ê–∫–∫–æ—Ä–¥–µ–æ–Ω */}
        <div className="space-y-2">
          {items.map((item, index) => (
            <div
              key={item.id}
              className="border border-gray-200 rounded-lg overflow-hidden"
            >
              <button
                onClick={() => toggleItem(item.id)}
                className="w-full px-4 py-3 text-left bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
              >
                <div className="flex items-center justify-between">
                  <span className="font-medium text-gray-900">
                    {item.title}
                  </span>
                  <svg
                    className={`w-5 h-5 text-gray-500 transition-transform ${
                      item.isOpen ? 'rotate-180' : ''
                    }`}
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </div>
              </button>
              
              {item.isOpen && (
                <div className="px-4 py-3 bg-white border-t border-gray-100">
                  <p className="text-gray-700 leading-relaxed">
                    {item.content}
                  </p>
                </div>
              )}
            </div>
          ))}
        </div>

        {/* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
        {items.length === 0 && (
          <div className="text-center py-8">
            <div className="text-4xl mb-4">üìù</div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">
              –ù–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
            </h3>
            <p className="text-gray-500">
              –î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —Å–≤–æ–π—Å—Ç–≤
            </p>
          </div>
        )}
      </div>
    </div>
  );
}
