const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function testDocumentCreation() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ö–ü
    const quoteData = {
      number: `–ö–ü-${Date.now()}`,
      client_id: 'cmh1gvnq500046z6i6ivwa3os',
      created_by: 'system',
      status: 'DRAFT',
      subtotal: 50000,
      total_amount: 50000,
      currency: 'RUB',
      notes: '–¢–µ—Å—Ç–æ–≤—ã–π –ö–ü',
      cart_data: JSON.stringify([{id: 'test', type: 'door', model: 'DomeoDoors_Base_1'}])
    };
    
    console.log('üìã –°–æ–∑–¥–∞–µ–º –ö–ü —Å –¥–∞–Ω–Ω—ã–º–∏:', quoteData);
    
    const quote = await prisma.quote.create({
      data: quoteData
    });
    
    console.log('‚úÖ –ö–ü —Å–æ–∑–¥–∞–Ω:', quote);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞
    const invoiceData = {
      number: `–°—á–µ—Ç-${Date.now()}`,
      client_id: 'cmh1gvnq500046z6i6ivwa3os',
      created_by: 'system',
      status: 'DRAFT',
      subtotal: 50000,
      total_amount: 50000,
      currency: 'RUB',
      notes: '–¢–µ—Å—Ç–æ–≤—ã–π —Å—á–µ—Ç',
      cart_data: JSON.stringify([{id: 'test', type: 'door', model: 'DomeoDoors_Base_1'}])
    };
    
    console.log('üí∞ –°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏:', invoiceData);
    
    const invoice = await prisma.invoice.create({
      data: invoiceData
    });
    
    console.log('‚úÖ –°—á–µ—Ç —Å–æ–∑–¥–∞–Ω:', invoice);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testDocumentCreation();
