const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function fixInvoiceQuoteLink() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Å—á–µ—Ç–æ–º –∏ –ö–ü...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—á–µ—Ç –∏ –ö–ü
    const invoice = await prisma.invoice.findFirst({
      where: {
        number: 'INVOICE-1761162618801'
      },
      select: {
        id: true,
        number: true,
        parent_document_id: true,
        cart_session_id: true,
        total_amount: true,
        created_at: true
      }
    });
    
    const quote = await prisma.quote.findFirst({
      where: {
        number: 'QUOTE-1761162610605'
      },
      select: {
        id: true,
        number: true,
        parent_document_id: true,
        cart_session_id: true,
        total_amount: true,
        created_at: true
      }
    });
    
    if (invoice && quote) {
      console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:');
      console.log(`   –ö–ü: ${quote.number} (ID: ${quote.id})`);
      console.log(`   –°—á–µ—Ç: ${invoice.number} (ID: ${invoice.id})`);
      console.log(`   –¢–µ–∫—É—â–∏–π parent_document_id —Å—á–µ—Ç–∞: ${invoice.parent_document_id}`);
      console.log(`   cart_session_id –ö–ü: ${quote.cart_session_id}`);
      console.log(`   cart_session_id —Å—á–µ—Ç–∞: ${invoice.cart_session_id}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ cart_session_id
      if (quote.cart_session_id === invoice.cart_session_id) {
        console.log('‚úÖ cart_session_id —Å–æ–≤–ø–∞–¥–∞—é—Ç - –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å–≤—è–∑–∞–Ω—ã');
        
        if (invoice.parent_document_id === null) {
          console.log('\nüîß –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤—è–∑—å —Å—á–µ—Ç–∞ —Å –ö–ü...');
          
          const updatedInvoice = await prisma.invoice.update({
            where: { id: invoice.id },
            data: {
              parent_document_id: quote.id
            },
            select: {
              id: true,
              number: true,
              parent_document_id: true
            }
          });
          
          console.log('‚úÖ –°–≤—è–∑—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞!');
          console.log(`   –°—á–µ—Ç: ${updatedInvoice.number}`);
          console.log(`   –ù–æ–≤—ã–π parent_document_id: ${updatedInvoice.parent_document_id}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É
          console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É —Å–≤—è–∑–µ–π:');
          console.log('‚úÖ –ü–û–õ–ù–ê–Ø –¶–ï–ü–û–ß–ö–ê –°–í–Ø–ó–ï–ô:');
          console.log(`   üìã –ö–ü: ${quote.number}`);
          console.log(`   ‚Üì (parent_document_id: ${quote.id})`);
          console.log(`   üí∞ –°—á–µ—Ç: ${updatedInvoice.number}`);
          console.log(`   ‚Üì (parent_document_id: ${updatedInvoice.parent_document_id})`);
          console.log(`   üì¶ –ó–∞–∫–∞–∑: ORD-001`);
          console.log(`   ‚Üì (parent_document_id: cmh2ewyxm000jlrzr1qxu8chy)`);
          console.log(`   üöö –ó–∞–∫–∞–∑ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: SUPPLIER-1761162898023`);
          
        } else {
          console.log('‚ö†Ô∏è –£ —Å—á–µ—Ç–∞ —É–∂–µ –µ—Å—Ç—å parent_document_id:', invoice.parent_document_id);
        }
        
      } else {
        console.log('‚ùå cart_session_id –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
        console.log(`   –ö–ü: ${quote.cart_session_id}`);
        console.log(`   –°—á–µ—Ç: ${invoice.cart_session_id}`);
      }
      
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—á–µ—Ç –∏–ª–∏ –ö–ü');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixInvoiceQuoteLink();
