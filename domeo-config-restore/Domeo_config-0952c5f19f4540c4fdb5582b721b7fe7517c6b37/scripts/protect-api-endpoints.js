/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞—â–∏—Ç—ã API endpoints
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∫ –Ω–µ–∑–∞—â–∏—â–µ–Ω–Ω—ã–º API
 */

const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ API endpoints, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—â–∏—â–µ–Ω—ã
const PROTECTED_ENDPOINTS = {
  // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ API - —Ç—Ä–µ–±—É—é—Ç —Ä–æ–ª—å admin
  'admin': {
    protection: 'withAdminAuth',
    files: [
      'app/api/admin/stats/route.ts',
      'app/api/admin/products/route.ts',
      'app/api/admin/categories/route.ts',
      'app/api/admin/import/route.ts',
      'app/api/admin/users/route.ts',
      'app/api/admin/constructor-configs/route.ts',
      'app/api/admin/import-templates/route.ts',
      'app/api/admin/media/route.ts'
    ]
  },
  
  // API –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ - —Ç—Ä–µ–±—É—é—Ç —Ä–æ–ª—å manager –∏–ª–∏ –≤—ã—à–µ
  'manager': {
    protection: 'withManagerAuth',
    files: [
      'app/api/complectator/stats/route.ts',
      'app/api/calculator/configs/route.ts',
      'app/api/configurator/route.ts',
      'app/api/export/route.ts',
      'app/api/documents/generate/route.ts'
    ]
  },
  
  // API –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  'user': {
    protection: 'withUserAuth',
    files: [
      'app/api/clients/route.ts',
      'app/api/quotes/route.ts',
      'app/api/orders/route.ts',
      'app/api/invoices/route.ts',
      'app/api/cart/route.ts',
      'app/api/notifications/route.ts'
    ]
  },
  
  // API —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
  'optional': {
    protection: 'withOptionalAuth',
    files: [
      'app/api/available-params/route.ts',
      'app/api/price/doors/route.ts',
      'app/api/catalog/products/route.ts',
      'app/api/catalog/categories/route.ts',
      'app/api/catalog/properties/route.ts'
    ]
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function addAuthImport(content) {
  const importLine = "import { withOptionalAuth, AuthContext } from '../../../../lib/auth/api-protection';";
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–º–ø–æ—Ä—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (content.includes('from \'../../../../lib/auth/api-protection\'')) {
    return content;
  }
  
  // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–º–ø–æ—Ä—Ç
  const importRegex = /import.*from.*['"];?\s*$/gm;
  const imports = content.match(importRegex);
  
  if (imports && imports.length > 0) {
    const lastImport = imports[imports.length - 1];
    const lastImportIndex = content.lastIndexOf(lastImport);
    const insertIndex = lastImportIndex + lastImport.length;
    
    return content.slice(0, insertIndex) + '\n' + importLine + content.slice(insertIndex);
  }
  
  // –ï—Å–ª–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
  return importLine + '\n' + content;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—â–∏—Ç—ã GET endpoint
function protectGETEndpoint(content, protection) {
  const getRegex = /export async function GET\(req: NextRequest\) \{/g;
  
  if (protection === 'withOptionalAuth') {
    return content.replace(getRegex, `export const GET = ${protection}(async (req: NextRequest, context: AuthContext | null) => {`);
  } else {
    return content.replace(getRegex, `export const GET = ${protection}(async (req: NextRequest, context: AuthContext) => {`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—â–∏—Ç—ã POST endpoint
function protectPOSTEndpoint(content, protection) {
  const postRegex = /export async function POST\(req: NextRequest\) \{/g;
  
  if (protection === 'withOptionalAuth') {
    return content.replace(postRegex, `export const POST = ${protection}(async (req: NextRequest, context: AuthContext | null) => {`);
  } else {
    return content.replace(postRegex, `export const POST = ${protection}(async (req: NextRequest, context: AuthContext) => {`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—â–∏—Ç—ã PUT endpoint
function protectPUTEndpoint(content, protection) {
  const putRegex = /export async function PUT\(req: NextRequest\) \{/g;
  
  if (protection === 'withOptionalAuth') {
    return content.replace(putRegex, `export const PUT = ${protection}(async (req: NextRequest, context: AuthContext | null) => {`);
  } else {
    return content.replace(putRegex, `export const PUT = ${protection}(async (req: NextRequest, context: AuthContext) => {`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—â–∏—Ç—ã DELETE endpoint
function protectDELETEEndpoint(content, protection) {
  const deleteRegex = /export async function DELETE\(req: NextRequest\) \{/g;
  
  if (protection === 'withOptionalAuth') {
    return content.replace(deleteRegex, `export const DELETE = ${protection}(async (req: NextRequest, context: AuthContext | null) => {`);
  } else {
    return content.replace(deleteRegex, `export const DELETE = ${protection}(async (req: NextRequest, context: AuthContext) => {`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫
function fixClosingBraces(content) {
  // –ó–∞–º–µ–Ω—è–µ–º } –Ω–∞ }); –≤ –∫–æ–Ω—Ü–µ —Ñ—É–Ω–∫—Ü–∏–π
  return content.replace(/\}\s*$/gm, '});');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function addAuthLogging(content, protection) {
  const loggingCode = `
  // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (context) {
    console.log('üîê Authenticated user:', context.userId, context.role);
  } else {
    console.log('üîì Anonymous request');
  }
  `;
  
  if (protection === 'withOptionalAuth') {
    // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏–∏
    return content.replace(
      /(export const \w+ = \w+\(async \(req: NextRequest, context: AuthContext \| null\) => \{)/g,
      `$1${loggingCode}`
    );
  } else {
    // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏–∏
    return content.replace(
      /(export const \w+ = \w+\(async \(req: NextRequest, context: AuthContext\) => \{)/g,
      `$1${loggingCode}`
    );
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—â–∏—Ç—ã —Ñ–∞–π–ª–∞
function protectFile(filePath, protection) {
  try {
    console.log(`üîí Protecting ${filePath} with ${protection}`);
    
    let content = fs.readFileSync(filePath, 'utf8');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    content = addAuthImport(content);
    
    // –ó–∞—â–∏—â–∞–µ–º –≤—Å–µ HTTP –º–µ—Ç–æ–¥—ã
    content = protectGETEndpoint(content, protection);
    content = protectPOSTEndpoint(content, protection);
    content = protectPUTEndpoint(content, protection);
    content = protectDELETEEndpoint(content, protection);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    content = addAuthLogging(content, protection);
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏
    content = fixClosingBraces(content);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(filePath, content);
    
    console.log(`‚úÖ Successfully protected ${filePath}`);
    
  } catch (error) {
    console.error(`‚ùå Error protecting ${filePath}:`, error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function fileExists(filePath) {
  return fs.existsSync(filePath);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function protectAllEndpoints() {
  console.log('üöÄ Starting API endpoints protection...\n');
  
  let totalProtected = 0;
  let totalSkipped = 0;
  
  for (const [level, config] of Object.entries(PROTECTED_ENDPOINTS)) {
    console.log(`üìÅ Processing ${level} level endpoints:`);
    
    for (const filePath of config.files) {
      if (fileExists(filePath)) {
        protectFile(filePath, config.protection);
        totalProtected++;
      } else {
        console.log(`‚ö†Ô∏è File not found: ${filePath}`);
        totalSkipped++;
      }
    }
    
    console.log('');
  }
  
  console.log('üìä Protection Summary:');
  console.log(`  ‚úÖ Protected: ${totalProtected} files`);
  console.log(`  ‚ö†Ô∏è Skipped: ${totalSkipped} files`);
  console.log(`  üìÅ Total processed: ${totalProtected + totalSkipped} files`);
  
  console.log('\nüí° Next steps:');
  console.log('  1. Review the protected files for any issues');
  console.log('  2. Test the API endpoints with authentication');
  console.log('  3. Update frontend to include JWT tokens in requests');
  console.log('  4. Configure JWT_SECRET in environment variables');
  
  console.log('\n‚úÖ API endpoints protection completed!');
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  protectAllEndpoints();
}

module.exports = { protectAllEndpoints, protectFile };
