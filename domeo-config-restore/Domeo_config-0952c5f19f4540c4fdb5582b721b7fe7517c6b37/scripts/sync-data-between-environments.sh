#!/bin/bash

# üîÑ –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å—Ä–µ–¥–∞–º–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./sync-data-between-environments.sh [source] [target]
# –ü—Ä–∏–º–µ—Ä: ./sync-data-between-environments.sh production staging

set -e

SOURCE_ENV=${1:-"production"}
TARGET_ENV=${2:-"staging"}

echo "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö: $SOURCE_ENV ‚Üí $TARGET_ENV"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–π
case $SOURCE_ENV in
    "production")
        SOURCE_HOST="130.193.40.35"
        SOURCE_PATH="/opt/domeo"
        SOURCE_KEY="production_key"
        SOURCE_PORT="3000"
        ;;
    "staging")
        SOURCE_HOST="89.169.189.66"
        SOURCE_PATH="/opt/domeo-staging"
        SOURCE_KEY="staging_key"
        SOURCE_PORT="3001"
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏—Å—Ö–æ–¥–Ω–∞—è —Å—Ä–µ–¥–∞: $SOURCE_ENV"
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—ã: production, staging"
        exit 1
        ;;
esac

case $TARGET_ENV in
    "production")
        TARGET_HOST="130.193.40.35"
        TARGET_PATH="/opt/domeo"
        TARGET_KEY="production_key"
        TARGET_PORT="3000"
        ;;
    "staging")
        TARGET_HOST="89.169.189.66"
        TARGET_PATH="/opt/domeo-staging"
        TARGET_KEY="staging_key"
        TARGET_PORT="3001"
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ü–µ–ª–µ–≤–∞—è —Å—Ä–µ–¥–∞: $TARGET_ENV"
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—ã: production, staging"
        exit 1
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä—è–µ–º SSH –∫–ª—é—á–∏
if [ ! -f "$SOURCE_KEY" ]; then
    echo "‚ùå SSH –∫–ª—é—á $SOURCE_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "$TARGET_KEY" ]; then
    echo "‚ùå SSH –∫–ª—é—á $TARGET_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ä–µ–¥–µ
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ $SOURCE_ENV..."
if ! ssh -i "$SOURCE_KEY" -o ConnectTimeout=10 ubuntu@$SOURCE_HOST "echo 'Connection OK'"; then
    echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ $SOURCE_ENV —Å–µ—Ä–≤–µ—Ä—É"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ü–µ–ª–µ–≤–æ–π —Å—Ä–µ–¥–µ
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ $TARGET_ENV..."
if ! ssh -i "$TARGET_KEY" -o ConnectTimeout=10 ubuntu@$TARGET_HOST "echo 'Connection OK'"; then
    echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ $TARGET_ENV —Å–µ—Ä–≤–µ—Ä—É"
    exit 1
fi

echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω—ã"

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ü–µ–ª–µ–≤–æ–π —Å—Ä–µ–¥—ã
echo "üíæ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø $TARGET_ENV..."
ssh -i "$TARGET_KEY" ubuntu@$TARGET_HOST << EOF
cd $TARGET_PATH
if [ -f "prisma/database/dev.db" ]; then
    cp prisma/database/dev.db prisma/database/dev.db.backup-$(date +%Y%m%d_%H%M%S)
    echo "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω"
fi
EOF

# –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
ssh -i "$SOURCE_KEY" ubuntu@$SOURCE_HOST "cd $SOURCE_PATH && tar -czf /tmp/db-backup.tar.gz prisma/database/dev.db"

scp -i "$SOURCE_KEY" ubuntu@$SOURCE_HOST:/tmp/db-backup.tar.gz ./db-backup.tar.gz
scp -i "$TARGET_KEY" ./db-backup.tar.gz ubuntu@$TARGET_HOST:/tmp/

ssh -i "$TARGET_KEY" ubuntu@$TARGET_HOST << EOF
cd $TARGET_PATH
tar -xzf /tmp/db-backup.tar.gz
rm /tmp/db-backup.tar.gz
echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
EOF

# –ö–æ–ø–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "üìÅ –ö–æ–ø–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
ssh -i "$SOURCE_KEY" ubuntu@$SOURCE_HOST "cd $SOURCE_PATH && tar -czf /tmp/uploads-backup.tar.gz public/uploads/"

scp -i "$SOURCE_KEY" ubuntu@$SOURCE_HOST:/tmp/uploads-backup.tar.gz ./uploads-backup.tar.gz
scp -i "$TARGET_KEY" ./uploads-backup.tar.gz ubuntu@$TARGET_HOST:/tmp/

ssh -i "$TARGET_KEY" ubuntu@$TARGET_HOST << EOF
cd $TARGET_PATH
tar -xzf /tmp/uploads-backup.tar.gz
rm /tmp/uploads-backup.tar.gz
echo "–§–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
EOF

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —Å—Ä–µ–¥–µ
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ $TARGET_ENV..."
ssh -i "$TARGET_KEY" ubuntu@$TARGET_HOST << EOF
cd $TARGET_PATH
# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å
pkill -f "next start" || true
sleep 2
# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—Ç—É
if [ "$TARGET_ENV" = "staging" ]; then
    npx next start -p 3001 &
else
    npx next start -p 3000 &
fi
EOF

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º health check $TARGET_ENV..."
sleep 10
if curl -f http://$TARGET_HOST:$TARGET_PORT/api/health; then
    echo "‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "üåê $TARGET_ENV –¥–æ—Å—Ç—É–ø–µ–Ω: http://$TARGET_HOST:$TARGET_PORT"
else
    echo "‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏"
    exit 1
fi

# –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
rm -f db-backup.tar.gz uploads-backup.tar.gz

echo "üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
