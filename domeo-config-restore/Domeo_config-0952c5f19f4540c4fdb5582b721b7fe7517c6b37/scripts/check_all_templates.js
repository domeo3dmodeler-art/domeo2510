const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkAllTemplates() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –í–°–ï —à–∞–±–ª–æ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const allTemplates = await prisma.importTemplate.findMany();

    console.log(`üìã –í—Å–µ–≥–æ —à–∞–±–ª–æ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ${allTemplates.length}`);
    
    for (const template of allTemplates) {
      console.log(`\nüìã –®–∞–±–ª–æ–Ω ID: ${template.id}`);
      console.log(`üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è ID: ${template.catalog_category_id}`);
      console.log(`üìã –ù–∞–∑–≤–∞–Ω–∏–µ: ${template.name}`);
      console.log(`üìã –û–±–Ω–æ–≤–ª–µ–Ω: ${template.updated_at}`);
      console.log(`üìã Required fields:`, JSON.parse(template.required_fields || '[]'));
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏"
    const categoryId = 'cmg50xcgs001cv7mn0tdyk1wo';
    const templatesForCategory = await prisma.importTemplate.findMany({
      where: { catalog_category_id: categoryId },
    });

    console.log(`\nüìã –®–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId}: ${templatesForCategory.length}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —à–∞–±–ª–æ–Ω–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkAllTemplates();
