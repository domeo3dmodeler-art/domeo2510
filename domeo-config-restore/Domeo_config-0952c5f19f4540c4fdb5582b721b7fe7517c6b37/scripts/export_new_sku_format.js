const { PrismaClient } = require('@prisma/client');
const XLSX = require('xlsx');
const fs = require('fs');
const path = require('path');

const prisma = new PrismaClient();

async function exportProductsWithNewSkuFormat() {
  try {
    console.log('üöÄ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω–æ–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º SKU...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω–æ–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º SKU (—Å–æ–¥–µ—Ä–∂–∞—Ç –¥–µ—Ñ–∏—Å—ã)
    const products = await prisma.product.findMany({
      where: {
        catalog_category: {
          name: '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏'
        },
        sku: {
          contains: '-' // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–µ—Ñ–∏—Å—ã
        }
      },
      select: {
        id: true,
        sku: true,
        name: true,
        base_price: true,
        stock_quantity: true,
        properties_data: true,
        created_at: true,
        updated_at: true
      }
    });
    
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å –Ω–æ–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º SKU`);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel
    const excelData = [];
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–∞–∑–≤–∞–Ω–∏—è–º —Å–≤–æ–π—Å—Ç–≤ –≤ –ë–î)
    const headers = [
      'SKU',
      'Name',
      'Price',
      'StockQuantity',
      '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
      'Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web',
      '–®–∏—Ä–∏–Ω–∞/–º–º',
      '–í—ã—Å–æ—Ç–∞/–º–º',
      '–¢–æ–ª—â–∏–Ω–∞/–º–º',
      '–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è',
      'Domeo_–¶–≤–µ—Ç',
      'Domeo_–°—Ç–∏–ª—å Web',
      '–¢–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
      '–¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è',
      '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
      '–ï–¥.–∏–∑–º.',
      '–°–∫–ª–∞–¥/–∑–∞–∫–∞–∑',
      '–¶–µ–Ω–∞ –æ–ø—Ç',
      '–ö—Ä–æ–º–∫–∞',
      '–°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ –∫—Ä–æ–º–∫—É',
      '–ú–æ–ª–¥–∏–Ω–≥',
      '–°—Ç–µ–∫–ª–æ',
      '–§–∞–±—Ä–∏–∫–∞_–ö–æ–ª–ª–µ–∫—Ü–∏—è',
      '–§–∞–±—Ä–∏–∫–∞_–¶–≤–µ—Ç/–û—Ç–¥–µ–ª–∫–∞',
      'photos'
    ];
    
    excelData.push(headers);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
    for (const product of products) {
      try {
        // –ü–∞—Ä—Å–∏–º properties_data
        let properties = {};
        if (product.properties_data) {
          try {
            properties = typeof product.properties_data === 'string' 
              ? JSON.parse(product.properties_data) 
              : product.properties_data;
          } catch (e) {
            console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ properties_data –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${product.id}`);
            continue;
          }
        }
        
        // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
        const row = [
          product.sku,                    // SKU
          product.name,                    // Name
          product.base_price,              // Price
          product.stock_quantity,          // StockQuantity
          properties['–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞'] || '', // –ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
          properties['Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web'] || '', // –ú–æ–¥–µ–ª—å
          properties['–®–∏—Ä–∏–Ω–∞/–º–º'] || '',   // –®–∏—Ä–∏–Ω–∞
          properties['–í—ã—Å–æ—Ç–∞/–º–º'] || '',   // –í—ã—Å–æ—Ç–∞
          properties['–¢–æ–ª—â–∏–Ω–∞/–º–º'] || '',  // –¢–æ–ª—â–∏–Ω–∞
          properties['–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è'] || '', // –ü–æ–∫—Ä—ã—Ç–∏–µ
          properties['Domeo_–¶–≤–µ—Ç'] || '',  // –¶–≤–µ—Ç
          properties['Domeo_–°—Ç–∏–ª—å Web'] || '', // –°—Ç–∏–ª—å
          properties['–¢–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'] || '', // –¢–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
          properties['–¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è'] || '', // –¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è
          properties['–ü–æ—Å—Ç–∞–≤—â–∏–∫'] || '',   // –ü–æ—Å—Ç–∞–≤—â–∏–∫
          properties['–ï–¥.–∏–∑–º.'] || '',     // –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è
          properties['–°–∫–ª–∞–¥/–∑–∞–∫–∞–∑'] || '', // –ù–∞–ª–∏—á–∏–µ
          properties['–¶–µ–Ω–∞ –æ–ø—Ç'] || '',    // –¶–µ–Ω–∞ –æ–ø—Ç
          properties['–ö—Ä–æ–º–∫–∞'] || '',      // –ö—Ä–æ–º–∫–∞
          properties['–°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ –∫—Ä–æ–º–∫—É'] || '', // –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—Ä–æ–º–∫–∏
          properties['–ú–æ–ª–¥–∏–Ω–≥'] || '',     // –ú–æ–ª–¥–∏–Ω–≥
          properties['–°—Ç–µ–∫–ª–æ'] || '',       // –°—Ç–µ–∫–ª–æ
          properties['–§–∞–±—Ä–∏–∫–∞_–ö–æ–ª–ª–µ–∫—Ü–∏—è'] || '', // –ö–æ–ª–ª–µ–∫—Ü–∏—è
          properties['–§–∞–±—Ä–∏–∫–∞_–¶–≤–µ—Ç/–û—Ç–¥–µ–ª–∫–∞'] || '', // –û—Ç–¥–µ–ª–∫–∞
          properties['photos'] || ''       // –§–æ—Ç–æ
        ];
        
        excelData.push(row);
        
      } catch (error) {
        console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ–≤–∞—Ä–∞ ${product.id}: ${error.message}`);
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª
    const ws = XLSX.utils.aoa_to_sheet(excelData);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, '–¢–æ–≤–∞—Ä—ã —Å –Ω–æ–≤—ã–º SKU');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    const fileName = `products_new_sku_format_${new Date().toISOString().split('T')[0]}.xlsx`;
    const filePath = path.join(__dirname, fileName);
    
    XLSX.writeFile(wb, filePath);
    
    console.log(`\n‚úÖ –§–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–æ–∑–¥–∞–Ω: ${fileName}`);
    console.log(`üìÅ –ü—É—Ç—å: ${filePath}`);
    console.log(`üìä –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${excelData.length - 1}`);
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É SKU:');
    
    const formatStats = new Map();
    products.forEach(product => {
      const parts = product.sku.split('-');
      if (parts.length >= 5) {
        const baseFormat = parts.slice(0, 4).join('-');
        formatStats.set(baseFormat, (formatStats.get(baseFormat) || 0) + 1);
      }
    });
    
    console.log(`üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π: ${formatStats.size}`);
    console.log('\nüîù –¢–æ–ø-10 –∫–æ–º–±–∏–Ω–∞—Ü–∏–π:');
    Array.from(formatStats.entries())
      .sort((a, b) => b[1] - a[1])
      .slice(0, 10)
      .forEach(([format, count], index) => {
        console.log(`  ${index + 1}. ${format}: ${count} —Ç–æ–≤–∞—Ä–æ–≤`);
      });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:');
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ Excel —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–∞–∑–≤–∞–Ω–∏—è–º —Å–≤–æ–π—Å—Ç–≤ –≤ –ë–î');
    console.log('‚úÖ –ú–∞–ø–ø–∏–Ω–≥ —É–±—Ä–∞–Ω - –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å');
    console.log('‚úÖ –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç SKU: [–ú–æ–¥–µ–ª—å]-[–†–∞–∑–º–µ—Ä]-[–ü–æ–∫—Ä—ã—Ç–∏–µ]-[–¶–≤–µ—Ç]-[–ù–æ–º–µ—Ä]');
    
    console.log('\nüí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª Excel');
    console.log('2. –ù–∞–π–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ SKU (–Ω–∞–ø—Ä–∏–º–µ—Ä, DomeoDoors_Base_1-600x2000-–ü–í–•-–ë–µ–ª—ã–π-001)');
    console.log('3. –ò–∑–º–µ–Ω–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è (—Ü–µ–Ω–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –æ–ø–∏—Å–∞–Ω–∏–µ)');
    console.log('4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª');
    console.log('5. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –∏–º–ø–æ—Ä—Ç–∞');
    console.log('6. –°–∏—Å—Ç–µ–º–∞ –Ω–∞–π–¥–µ—Ç —Ç–æ–≤–∞—Ä –ø–æ SKU –∏ –æ–±–Ω–æ–≤–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—è');
    
    console.log('\nüéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:');
    console.log('‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ SKU –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞');
    console.log('‚úÖ –ü–æ–Ω—è—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –º–æ–¥–µ–ª—å-—Ä–∞–∑–º–µ—Ä-–ø–æ–∫—Ä—ã—Ç–∏–µ-—Ü–≤–µ—Ç-–Ω–æ–º–µ—Ä');
    console.log('‚úÖ –õ–µ–≥–∫–æ –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    console.log('‚úÖ –ù–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤');
    console.log('‚úÖ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —à–∞–±–ª–æ–Ω–∞ –∏ –ë–î');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

exportProductsWithNewSkuFormat();
