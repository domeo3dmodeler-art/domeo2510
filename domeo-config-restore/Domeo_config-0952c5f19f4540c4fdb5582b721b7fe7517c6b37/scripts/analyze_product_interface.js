const fs = require('fs');
const path = require('path');

function analyzeProductInterface() {
  console.log('üîç –ê–ù–ê–õ–ò–ó –ò–ù–¢–ï–†–§–ï–ô–°–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–û–í–ê–†–ê–ú–ò\n');

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  const interfaceFiles = [
    'app/app/admin/catalog/page.tsx',
    'app/components/admin/TemplateManager.tsx',
    'app/components/admin/PriceListExporter.tsx',
    'app/app/admin/catalog/import/page.tsx'
  ];

  console.log('üìÅ –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–û–í –ò–ù–¢–ï–†–§–ï–ô–°–ê:');

  interfaceFiles.forEach(file => {
    if (fs.existsSync(file)) {
      const content = fs.readFileSync(file, 'utf8');
      const lines = content.split('\n').length;
      const size = fs.statSync(file).size;
      
      console.log(`\nüìÑ ${file}:`);
      console.log(`   - –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: ${lines}`);
      console.log(`   - –†–∞–∑–º–µ—Ä: ${(size / 1024).toFixed(2)} KB`);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
      const componentMatches = content.match(/function\s+(\w+)/g) || [];
      const componentNames = componentMatches.map(match => match.replace('function ', ''));
      
      if (componentNames.length > 0) {
        console.log(`   - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: ${componentNames.join(', ')}`);
      }
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—ã
      const issues = [];
      
      if (content.includes('console.log')) {
        issues.push('–û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
      }
      
      if (content.includes('TODO') || content.includes('FIXME')) {
        issues.push('TODO –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏');
      }
      
      if (content.includes('any')) {
        issues.push('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ any');
      }
      
      if (content.includes('useState') && !content.includes('useCallback')) {
        issues.push('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é');
      }
      
      if (issues.length > 0) {
        console.log(`   ‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã: ${issues.join(', ')}`);
      } else {
        console.log(`   ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
      }
    } else {
      console.log(`\n‚ùå ${file}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  });

  console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ù–¢–ï–†–§–ï–ô–°–ê:');
  
  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  let totalLines = 0;
  let totalSize = 0;
  let totalComponents = 0;
  let totalIssues = 0;

  interfaceFiles.forEach(file => {
    if (fs.existsSync(file)) {
      const content = fs.readFileSync(file, 'utf8');
      const lines = content.split('\n').length;
      const size = fs.statSync(file).size;
      
      totalLines += lines;
      totalSize += size;
      
      const componentMatches = content.match(/function\s+(\w+)/g) || [];
      totalComponents += componentMatches.length;
      
      if (content.includes('console.log') || content.includes('TODO') || content.includes('FIXME') || content.includes('any')) {
        totalIssues++;
      }
    }
  });

  console.log(`   - –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: ${totalLines}`);
  console.log(`   - –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${(totalSize / 1024).toFixed(2)} KB`);
  console.log(`   - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${totalComponents}`);
  console.log(`   - –§–∞–π–ª–æ–≤ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏: ${totalIssues}`);

  console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ:');
  console.log('   1. –£–±—Ä–∞—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ console.log');
  console.log('   2. –ó–∞–º–µ–Ω–∏—Ç—å —Ç–∏–ø any –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã');
  console.log('   3. –î–æ–±–∞–≤–∏—Ç—å useCallback –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');
  console.log('   4. –£–ª—É—á—à–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫');
  console.log('   5. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
  console.log('   6. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
  console.log('   7. –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ñ–æ—Ä–º');
  console.log('   8. –£–ª—É—á—à–∏—Ç—å –º–æ–±–∏–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å');

  console.log('\nüîß –ü–õ–ê–ù –£–õ–£–ß–®–ï–ù–ò–ô:');
  console.log('   1. –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–∞');
  console.log('   2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
  console.log('   3. –£–ª—É—á—à–µ–Ω–∏–µ UX/UI');
  console.log('   4. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
  console.log('   5. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤');
}

analyzeProductInterface();
