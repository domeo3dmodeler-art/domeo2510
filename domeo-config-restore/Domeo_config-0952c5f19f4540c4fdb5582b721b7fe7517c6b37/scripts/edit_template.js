const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function editTemplate() {
  try {
    const templateId = 'cmg6u3kis0cg7mej2z6nnuezp';
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω
    const template = await prisma.importTemplate.findUnique({
      where: { id: templateId }
    });
    
    if (!template) {
      console.log('‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('üìã –¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω:', template.name);
    
    // –ü–∞—Ä—Å–∏–º —Ç–µ–∫—É—â–∏–µ –ø–æ–ª—è
    const requiredFields = JSON.parse(template.required_fields || '[]');
    const templateConfig = JSON.parse(template.template_config || '{}');
    
    console.log('‚úÖ –¢–µ–∫—É—â–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:');
    requiredFields.forEach((field, i) => console.log(`   ${i+1}. ${field}`));
    
    // –ü—Ä–∏–º–µ—Ä —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –ø–æ–ª–µ
    const newRequiredFields = [
      ...requiredFields,
      '–ù–æ–≤–æ–µ –ø–æ–ª–µ' // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –ø–æ–ª–µ
    ];
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω
    const updatedTemplate = await prisma.importTemplate.update({
      where: { id: templateId },
      data: {
        required_fields: JSON.stringify(newRequiredFields),
        updated_at: new Date()
      }
    });
    
    console.log('‚úÖ –®–∞–±–ª–æ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!');
    console.log('üìÖ –û–±–Ω–æ–≤–ª–µ–Ω:', updatedTemplate.updated_at);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

editTemplate();
