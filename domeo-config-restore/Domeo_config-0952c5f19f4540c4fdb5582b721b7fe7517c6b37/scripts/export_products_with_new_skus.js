const { PrismaClient } = require('@prisma/client');
const XLSX = require('xlsx');
const fs = require('fs');
const path = require('path');

const prisma = new PrismaClient();

async function exportProductsWithNewSkus() {
  try {
    console.log('üöÄ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω–æ–≤—ã–º–∏ SKU...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏"
    const products = await prisma.product.findMany({
      where: {
        catalog_category: {
          name: '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏'
        }
      },
      select: {
        id: true,
        sku: true,
        name: true,
        base_price: true,
        stock_quantity: true,
        properties_data: true,
        created_at: true,
        updated_at: true
      }
    });
    
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞`);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel
    const excelData = [];
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = [
      'SKU',
      'Name', 
      'Price',
      'StockQuantity',
      'ModelName',
      'Style',
      'Finish',
      'Color',
      'Width',
      'Height',
      'Thickness',
      'Unit',
      'Availability',
      'Supplier',
      'OpeningType',
      'Edge',
      'EdgeCost',
      'Molding',
      'Glass',
      'HardwareName',
      'HardwareDescription',
      'PriceGroup',
      'Photos',
      'CreatedAt',
      'UpdatedAt'
    ];
    
    excelData.push(headers);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä
    for (const product of products) {
      try {
        // –ü–∞—Ä—Å–∏–º properties_data
        let properties = {};
        if (product.properties_data) {
          try {
            properties = typeof product.properties_data === 'string' 
              ? JSON.parse(product.properties_data) 
              : product.properties_data;
          } catch (e) {
            console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ properties_data –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${product.id}`);
            continue;
          }
        }
        
        // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
        const row = [
          product.sku, // SKU
          product.name || '', // Name
          product.base_price || 0, // Price
          product.stock_quantity || 0, // StockQuantity
          properties['Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web'] || '', // ModelName
          properties['Domeo_–°—Ç–∏–ª—å Web'] || '', // Style
          properties['–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è'] || '', // Finish
          properties['Domeo_–¶–≤–µ—Ç'] || '', // Color
          properties['–®–∏—Ä–∏–Ω–∞/–º–º'] || '', // Width
          properties['–í—ã—Å–æ—Ç–∞/–º–º'] || '', // Height
          properties['–¢–æ–ª—â–∏–Ω–∞/–º–º'] || '', // Thickness
          properties['–ï–¥.–∏–∑–º.'] || '—à—Ç', // Unit
          properties['–ù–∞–ª–∏—á–∏–µ'] || '', // Availability
          properties['–ü–æ—Å—Ç–∞–≤—â–∏–∫'] || '', // Supplier
          properties['–¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è'] || '', // OpeningType
          properties['–ö—Ä–æ–º–∫–∞'] || '', // Edge
          properties['–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—Ä–æ–º–∫–∏'] || '', // EdgeCost
          properties['–ù–∞–ª–∏—á–Ω–∏–∫'] || '', // Molding
          properties['–°—Ç–µ–∫–ª–æ'] || '', // Glass
          properties['–§—É—Ä–Ω–∏—Ç—É—Ä–∞_–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã'] || '', // HardwareName
          properties['–§—É—Ä–Ω–∏—Ç—É—Ä–∞_–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã'] || '', // HardwareDescription
          properties['–¶–µ–Ω–æ–≤–∞—è –≥—Ä—É–ø–ø–∞'] || '', // PriceGroup
          Array.isArray(properties['photos']) ? properties['photos'].join(';') : '', // Photos
          product.created_at ? new Date(product.created_at).toISOString() : '', // CreatedAt
          product.updated_at ? new Date(product.updated_at).toISOString() : '' // UpdatedAt
        ];
        
        excelData.push(row);
        
      } catch (error) {
        console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ–≤–∞—Ä–∞ ${product.id}: ${error.message}`);
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª
    const ws = XLSX.utils.aoa_to_sheet(excelData);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, 'Products');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    const fileName = `products_with_new_skus_${new Date().toISOString().split('T')[0]}.xlsx`;
    const filePath = path.join(__dirname, '..', fileName);
    
    XLSX.writeFile(wb, filePath);
    
    console.log(`‚úÖ –§–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–æ–∑–¥–∞–Ω: ${fileName}`);
    console.log(`üìÅ –ü—É—Ç—å: ${filePath}`);
    console.log(`üìä –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å—Ç—Ä–æ–∫: ${excelData.length - 1} (–≤–∫–ª—é—á–∞—è –∑–∞–≥–æ–ª–æ–≤–∫–∏)`);
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ SKU
    const skuStats = {};
    products.forEach(product => {
      const skuPrefix = product.sku.split('_')[0];
      skuStats[skuPrefix] = (skuStats[skuPrefix] || 0) + 1;
    });
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º SKU:');
    Object.entries(skuStats).forEach(([prefix, count]) => {
      console.log(`  - ${prefix}: ${count} —Ç–æ–≤–∞—Ä–æ–≤`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å SKU
    const allSkus = products.map(p => p.sku);
    const uniqueSkus = new Set(allSkus);
    
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏:');
    console.log(`üìä –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${products.length}`);
    console.log(`üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö SKU: ${uniqueSkus.size}`);
    console.log(`üìä –î—É–±–ª–∏–∫–∞—Ç–æ–≤: ${products.length - uniqueSkus.size}`);
    
    if (products.length === uniqueSkus.size) {
      console.log('‚úÖ –í—Å–µ SKU —É–Ω–∏–∫–∞–ª—å–Ω—ã!');
    } else {
      console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã SKU');
    }
    
    console.log('\nüéâ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª Excel');
    console.log('2. –ò–∑–º–µ–Ω–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è (—Ü–µ–Ω–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ç.–¥.)');
    console.log('3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª');
    console.log('4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—ã–π API /api/admin/simple-import –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
    console.log('5. –°–∏—Å—Ç–µ–º–∞ –Ω–∞–π–¥–µ—Ç —Ç–æ–≤–∞—Ä—ã –ø–æ SKU –∏ –æ–±–Ω–æ–≤–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—è');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

exportProductsWithNewSkus();
