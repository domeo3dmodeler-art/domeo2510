import { NextRequest, NextResponse } from 'next/server';
import { 
  exportDocumentWithPDF, 
  cleanupExportResources 
} from '@/lib/export/puppeteer-generator';
import { generateCartSessionId } from '@/lib/utils/cart-session';

// POST /api/export/fast - –ë—ã—Å—Ç—Ä—ã–π —ç–∫—Å–ø–æ—Ä—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { 
      type, 
      format, 
      clientId, 
      items, 
      totalAmount, 
      parentDocumentId, 
      cartSessionId 
    } = body;
    
    console.log('üöÄ Fast export request:', { 
      type, 
      format, 
      clientId, 
      itemsCount: items.length, 
      totalAmount 
    });

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!type || !format || !clientId || !items || !Array.isArray(items)) {
      console.error('‚ùå Validation failed:', { type, format, clientId, items });
      return NextResponse.json(
        { error: '–ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞' },
        { status: 400 }
      );
    }

    if (!['quote', 'invoice', 'order'].includes(type)) {
      console.error('‚ùå Invalid document type:', type);
      return NextResponse.json(
        { error: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞' },
        { status: 400 }
      );
    }

    if (!['pdf', 'excel', 'csv'].includes(format)) {
      console.error('‚ùå Invalid format:', format);
      return NextResponse.json(
        { error: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞' },
        { status: 400 }
      );
    }

    if (items.length === 0) {
      console.error('‚ùå Empty cart');
      return NextResponse.json(
        { error: '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞' },
        { status: 400 }
      );
    }

    console.log('‚úÖ Validation passed, starting export...');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π cartSessionId –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π
    let finalCartSessionId = cartSessionId;
    
    if (!finalCartSessionId) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º cart_session_id –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã
      // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –æ–¥–∏–Ω–∞–∫–æ–≤–∞—è - cart_session_id –±—É–¥–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π
      const cartHash = Buffer.from(JSON.stringify({
        clientId,
        items: items.map(item => ({
          id: item.id,
          type: item.type,
          model: item.model,
          qty: item.qty,
          unitPrice: item.unitPrice
        })),
        totalAmount
      })).toString('base64').substring(0, 20);
      
      finalCartSessionId = `cart_${cartHash}`;
    }
    
    console.log('üõí Cart session ID:', finalCartSessionId);
    console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Parent document ID:', parentDocumentId);
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    const result = await exportDocumentWithPDF(
      type,
      format,
      clientId,
      items,
      totalAmount,
      finalCartSessionId,
      parentDocumentId
    );

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ filename —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã
    const safeFilename = result.filename.replace(/[^\x00-\x7F]/g, (char) => {
      const charCode = char.charCodeAt(0);
      if (charCode === 1050) return 'K'; // –ö
      if (charCode === 1055) return 'P'; // –ü
      if (charCode === 1057) return 'S'; // –°
      if (charCode === 1095) return 'ch'; // —á
      if (charCode === 1077) return 'e'; // –µ
      if (charCode === 1090) return 't'; // —Ç
      if (charCode === 1079) return 'z'; // –∑
      if (charCode === 1072) return 'a'; // –∞
      if (charCode === 1082) return 'k'; // –∫
      return 'X';
    });
    
    return new NextResponse(result.buffer, {
      headers: {
        'Content-Type': result.mimeType,
        'Content-Disposition': `attachment; filename="${safeFilename}"`,
        'Content-Length': result.buffer.length.toString(),
        'X-Document-Id': result.documentId || '',
        'X-Document-Type': result.documentType || '',
        'X-Document-Number': result.documentNumber || '',
        'Cache-Control': 'no-cache'
      }
    });

  } catch (error) {
    console.error('‚ùå Fast export error:', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞' },
      { status: 500 }
    );
  }
}

