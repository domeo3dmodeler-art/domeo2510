'use client'
import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import AdminLayout from '../../../components/layout/AdminLayout';

type FieldMapping = {
  key: string;
  name: string;
  type: 'text' | 'number' | 'select' | 'url';
  required: boolean;
  unit?: string;
  options?: string[];
};

type Category = { 
  id: string; 
  name: string; 
  slug: string;
  description?: string; 
  parentId?: string;
  level: number;
  sortOrder: number;
  isActive: boolean;
  
  // NoCode –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  configuratorConfig: any;
  pageTemplate?: string;
  customLayout?: any;
  
  // –°–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
  properties: FieldMapping[];
  importMapping: Record<string, string>;
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  productsCount: number;
  subcategoriesCount: number;
  
  // –°–≤—è–∑–∏
  subcategories?: Category[];
  parent?: {
    id: string;
    name: string;
    slug: string;
  };
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  createdAt: string;
  updatedAt: string;
};

export default function CategoriesPage() {
  const [categories, setCategories] = useState<Category[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchCategories();
  }, []);

  const fetchCategories = async () => {
    try {
      const response = await fetch('/api/admin/categories');
      const data = await response.json();
      
      if (data.success) {
        setCategories(data.categories || []);
      } else {
        console.error('Error fetching categories:', data.error);
      }
    } catch (error) {
      console.error('Error fetching categories:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleDeleteCategory = async (categoryId: string, categoryName: string) => {
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é "${categoryName}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`)) {
      return;
    }

    try {
      const response = await fetch(`/api/admin/categories/${categoryId}`, {
        method: 'DELETE',
      });
      
      const data = await response.json();
      
      if (data.success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        setCategories(prev => prev.filter(cat => cat.id !== categoryId));
        alert('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ' + data.error);
      }
    } catch (error) {
      console.error('Error deleting category:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
    }
  };


  if (loading) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-gray-600 mx-auto mb-4"></div>
          <p className="text-gray-600 text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...</p>
        </div>
      </div>
    );
  }

  return (
    <AdminLayout title="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä–∞" subtitle="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞">
      <div className="max-w-6xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
        <div className="space-y-8">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="flex justify-between items-center">
            <div>
              <p className="text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
            </div>
            <Link
              href="/admin/categories/builder"
              className="px-6 py-3 bg-black text-white rounded-none hover:bg-yellow-400 hover:text-black transition-all duration-200 font-medium"
            >
              + –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            </Link>
          </div>

          {/* –ü–æ–∏—Å–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="flex justify-between items-center">
            <div className="flex items-center space-x-4">
              <div className="relative">
                <input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π..."
                  className="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
              </div>
            </div>
            <div className="text-sm text-gray-500">
              {categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä–∞
            </div>
          </div>

          {/* –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
          <div className="space-y-6">
            {categories.length === 0 ? (
              <div className="text-center py-12">
                <div className="text-6xl mb-4">üìã</div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã</h3>
                <p className="text-gray-600 mb-6">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
                <Link
                  href="/admin/categories/builder"
                  className="inline-flex items-center px-6 py-3 bg-black text-white rounded-lg hover:bg-yellow-400 hover:text-black transition-all duration-200 font-medium"
                >
                  + –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                </Link>
              </div>
            ) : (
              categories.map(category => (
              <div key={category.id} className="bg-white rounded-xl shadow-md border border-gray-200">
                {/* –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è */}
                <div className="p-6">
                  <div className="flex items-center mb-4">
                    <div className="bg-gray-100 p-3 rounded-lg mr-4">
                      <span className="text-3xl">üì¶</span>
                    </div>
                    <div className="flex-1">
                      <div className="flex items-center space-x-2 mb-1">
                        <h3 className="text-xl font-semibold text-gray-900">{category.name}</h3>
                        <span className="text-sm text-gray-500">({category.slug})</span>
                        {!category.isActive && (
                          <span className="px-2 py-1 text-xs bg-red-100 text-red-800 rounded-full">
                            –ù–µ–∞–∫—Ç–∏–≤–Ω–∞
                          </span>
                        )}
                      </div>
                      <p className="text-sm text-gray-500">{category.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
                      <div className="flex items-center space-x-4 mt-2 text-xs text-gray-400">
                        <span>–¢–æ–≤–∞—Ä–æ–≤: {category.productsCount}</span>
                        <span>–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π: {category.subcategoriesCount}</span>
                        <span>–£—Ä–æ–≤–µ–Ω—å: {category.level}</span>
                      </div>
                    </div>
                    <div className="flex space-x-2">
                      <Link
                        href={`/admin/categories/${category.id}/configurator`}
                        className="px-3 py-2 bg-black text-white text-sm rounded-none hover:bg-yellow-400 hover:text-black text-center transition-all duration-200 font-medium"
                        title="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä"
                      >
                        üé® –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä
                      </Link>
                      <Link
                        href={`/admin/categories/builder?id=${category.id}`}
                        className="px-3 py-2 bg-transparent border border-black text-black text-sm rounded-none hover:bg-black hover:text-white text-center transition-all duration-200 font-medium"
                      >
                        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                      </Link>
                      <button
                        onClick={() => handleDeleteCategory(category.id, category.name)}
                        className="px-3 py-2 bg-red-600 text-white text-sm rounded-none hover:bg-red-700 text-center transition-all duration-200 font-medium"
                        title="–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
                      >
                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                      </button>
                    </div>
                  </div>

                  {/* NoCode –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è */}
                  <div className="mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="text-sm font-semibold text-blue-900">NoCode –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</h4>
                      <div className="flex items-center space-x-2">
                        {category.pageTemplate && (
                          <span className="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full">
                            –®–∞–±–ª–æ–Ω: {category.pageTemplate}
                          </span>
                        )}
                        {category.customLayout && (
                          <span className="px-2 py-1 text-xs bg-green-100 text-green-800 rounded-full">
                            –ö–∞—Å—Ç–æ–º–Ω—ã–π –ª–µ–π–∞—É—Ç
                          </span>
                        )}
                      </div>
                    </div>
                    <div className="text-xs text-blue-700">
                      {Object.keys(category.configuratorConfig).length > 0 
                        ? `–ù–∞—Å—Ç—Ä–æ–µ–Ω–æ: ${Object.keys(category.configuratorConfig).join(', ')}`
                        : '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
                      }
                    </div>
                  </div>

                  {/* –°–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
                  <div className="mb-4">
                    <p className="text-sm text-gray-600 mb-2">–°–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤:</p>
                    <div className="flex flex-wrap gap-1">
                      {category.properties.slice(0, 4).map((prop) => (
                        <span 
                          key={prop.key}
                          className={`px-2 py-1 text-xs rounded-full ${
                            prop.required 
                              ? 'bg-gray-200 text-gray-800 border border-gray-300' 
                              : 'bg-gray-100 text-gray-700 border border-gray-200'
                          }`}
                        >
                          {prop.name}
                          {prop.required && ' *'}
                        </span>
                      ))}
                      {category.properties.length > 4 && (
                        <span className="px-2 py-1 text-xs bg-gray-200 text-gray-800 rounded-full border border-gray-300">
                          +{category.properties.length - 4} –µ—â–µ
                        </span>
                      )}
                    </div>
                  </div>
                </div>

                {/* –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
                {category.subcategories && category.subcategories.length > 0 && (
                  <div className="border-t border-gray-200 bg-gray-50 p-6">
                    <h4 className="text-lg font-semibold text-gray-800 mb-4">–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                      {category.subcategories.map(subcategory => (
                        <div key={subcategory.id} className="bg-white rounded-lg p-4 border border-gray-200">
                          <div className="flex items-center mb-3">
                            <div className="bg-gray-100 p-2 rounded-lg mr-3">
                              <span className="text-xl">üì¶</span>
                            </div>
                            <div className="flex-1">
                              <h5 className="font-semibold text-gray-900">{subcategory.name}</h5>
                              <p className="text-xs text-gray-500">{subcategory.description}</p>
                            </div>
                          </div>
                          
                          <div className="mb-3">
                            <p className="text-xs text-gray-600 mb-1">–°–≤–æ–π—Å—Ç–≤–∞:</p>
                            <div className="flex flex-wrap gap-1">
                              {subcategory.properties.slice(0, 3).map((prop) => (
                                <span 
                                  key={prop.key}
                                  className={`px-1 py-0.5 text-xs rounded ${
                                    prop.required 
                                      ? 'bg-gray-200 text-gray-800' 
                                      : 'bg-gray-100 text-gray-700'
                                  }`}
                                >
                                  {prop.name}
                                  {prop.required && ' *'}
                                </span>
                              ))}
                              {subcategory.properties.length > 3 && (
                                <span className="px-1 py-0.5 text-xs bg-gray-200 text-gray-800 rounded">
                                  +{subcategory.properties.length - 3}
                                </span>
                              )}
                            </div>
                          </div>

                          <div className="flex space-x-2">
                            <button className="flex-1 px-2 py-1 bg-transparent border border-black text-black text-xs rounded-none hover:bg-black hover:text-white text-center transition-all duration-200 font-medium">
                              –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                            </button>
                            <button 
                              onClick={() => handleDeleteCategory(subcategory.id, subcategory.name)}
                              className="flex-1 px-2 py-1 bg-red-600 text-white text-xs rounded-none hover:bg-red-700 text-center transition-all duration-200 font-medium"
                            >
                              –£–¥–∞–ª–∏—Ç—å
                            </button>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
              ))
            )}
          </div>

        </div>
      </div>
    </AdminLayout>
  );
}