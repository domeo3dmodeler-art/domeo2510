'use client';

import { useState, useEffect } from 'react';
import AdminLayout from '../../../components/layout/AdminLayout';
import { Card, Button } from '../../../components/ui';

interface SystemSettings {
  pricing: {
    defaultMargin: number;
    currency: string;
    taxRate: number;
  };
}

export default function AdminSettingsPage() {
  const [settings, setSettings] = useState<SystemSettings>({
    pricing: {
      defaultMargin: 30,
      currency: 'RUB',
      taxRate: 20
    }
  });
  const [isLoading, setIsLoading] = useState(true);
  const [isSaving, setIsSaving] = useState(false);
  const [saveMessage, setSaveMessage] = useState('');

  useEffect(() => {
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
    setTimeout(() => {
      setIsLoading(false);
    }, 1000);
  }, []);

  const handleSave = async () => {
    setIsSaving(true);
    setSaveMessage('');
    
    try {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      setSaveMessage('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
      setTimeout(() => setSaveMessage(''), 3000);
    } catch (error) {
      setSaveMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    } finally {
      setIsSaving(false);
    }
  };

  const updateSetting = (section: keyof SystemSettings, field: string, value: any) => {
    setSettings(prev => ({
      ...prev,
      [section]: {
        ...prev[section],
        [field]: value
      }
    }));
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-black mx-auto"></div>
          <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...</p>
        </div>
      </div>
    );
  }

  return (
    <AdminLayout
      title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã"
      subtitle="–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∏ —ç–∫—Å–ø–æ—Ä—Ç–∞"
    >
      {/* Save Button */}
      <div className="mb-6 flex justify-end">
        <Button
          variant="primary"
          onClick={handleSave}
          disabled={isSaving}
        >
          {isSaving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
        </Button>
      </div>
        {saveMessage && (
          <div className={`mb-6 p-4 rounded ${
            saveMessage.includes('—É—Å–ø–µ—à–Ω–æ') 
              ? 'bg-green-50 border border-green-200 text-green-700' 
              : 'bg-red-50 border border-red-200 text-red-700'
          }`}>
            {saveMessage}
          </div>
        )}

        <div className="space-y-8">
          {/* –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ */}
          <Card variant="base">
            <div className="p-6">
              <h2 className="text-lg font-semibold text-black mb-4">üí∞ –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</h2>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-600 mb-2">–ù–∞—Ü–µ–Ω–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (%)</label>
                  <input
                    type="number"
                    min="0"
                    max="100"
                    value={settings.pricing.defaultMargin}
                    onChange={(e) => updateSetting('pricing', 'defaultMargin', Number(e.target.value))}
                    className="w-full px-3 py-2 border border-gray-300 text-black focus:outline-none focus:ring-2 focus:ring-yellow-400"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-600 mb-2">–í–∞–ª—é—Ç–∞</label>
                  <select
                    value={settings.pricing.currency}
                    onChange={(e) => updateSetting('pricing', 'currency', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 text-black focus:outline-none focus:ring-2 focus:ring-yellow-400"
                  >
                    <option value="RUB">RUB (–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å)</option>
                    <option value="USD">USD (–î–æ–ª–ª–∞—Ä –°–®–ê)</option>
                    <option value="EUR">EUR (–ï–≤—Ä–æ)</option>
                  </select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-600 mb-2">–ù–î–° (%)</label>
                  <input
                    type="number"
                    min="0"
                    max="100"
                    value={settings.pricing.taxRate}
                    onChange={(e) => updateSetting('pricing', 'taxRate', Number(e.target.value))}
                    className="w-full px-3 py-2 border border-gray-300 text-black focus:outline-none focus:ring-2 focus:ring-yellow-400"
                  />
                </div>
              </div>
            </div>
          </Card>

          {/* –§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á–µ—Ç–∞ */}
          <Card variant="base">
            <div className="p-6">
              <h2 className="text-lg font-semibold text-black mb-4">üßÆ –§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á–µ—Ç–∞</h2>
              <div className="space-y-4">
                <div className="p-4 bg-gray-50 rounded">
                  <h3 className="font-medium text-black mb-2">–§–æ—Ä–º—É–ª–∞ —Ü–µ–Ω—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:</h3>
                  <code className="text-sm text-gray-700">
                    –¶–µ–Ω–∞_–∫–ª–∏–µ–Ω—Ç–∞ = –¶–µ–Ω–∞_–∑–∞–∫—É–ø–∫–∏ √ó (1 + –ù–∞—Ü–µ–Ω–∫–∞_%) √ó (1 + –ù–î–°_%)
                  </code>
                </div>
                <div className="p-4 bg-gray-50 rounded">
                  <h3 className="font-medium text-black mb-2">–§–æ—Ä–º—É–ª–∞ —Å–∫–∏–¥–∫–∏:</h3>
                  <code className="text-sm text-gray-700">
                    –ò—Ç–æ–≥–æ–≤–∞—è_—Ü–µ–Ω–∞ = –¶–µ–Ω–∞_–∫–ª–∏–µ–Ω—Ç–∞ √ó (1 - –°–∫–∏–¥–∫–∞_%)
                  </code>
                </div>
                <div className="p-4 bg-gray-50 rounded">
                  <h3 className="font-medium text-black mb-2">–§–æ—Ä–º—É–ª–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É:</h3>
                  <code className="text-sm text-gray-700">
                    –ó–∞–∫–∞–∑_—Ñ–∞–±—Ä–∏–∫–∞ = –¶–µ–Ω–∞_–∑–∞–∫—É–ø–∫–∏ √ó –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ √ó (1 + –ù–î–°_%)
                  </code>
                </div>
              </div>
            </div>
          </Card>

          {/* –ü–æ–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ */}
          <Card variant="base">
            <div className="p-6">
              <h2 className="text-lg font-semibold text-black mb-4">–ü–æ–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞</h2>
              <div className="space-y-4">
                <div>
                  <h3 className="font-medium text-black mb-2">–ü–æ–ª—è –¥–ª—è –ö–ü:</h3>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
                    {['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–¶–µ–Ω–∞', '–°—É–º–º–∞', '–°–∫–∏–¥–∫–∞', '–ò—Ç–æ–≥–æ'].map((field) => (
                      <label key={field} className="flex items-center">
                        <input
                          type="checkbox"
                          defaultChecked
                          className="h-4 w-4 text-black focus:ring-yellow-400 border-gray-300 rounded mr-2"
                        />
                        <span className="text-sm text-black">{field}</span>
                      </label>
                    ))}
                  </div>
                </div>
                <div>
                  <h3 className="font-medium text-black mb-2">–ü–æ–ª—è –¥–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É:</h3>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
                    {['–ê—Ä—Ç–∏–∫—É–ª', '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–¶–µ–Ω–∞_–∑–∞–∫—É–ø–∫–∏', '–°—É–º–º–∞', '–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ'].map((field) => (
                      <label key={field} className="flex items-center">
                        <input
                          type="checkbox"
                          defaultChecked
                          className="h-4 w-4 text-black focus:ring-yellow-400 border-gray-300 rounded mr-2"
                        />
                        <span className="text-sm text-black">{field}</span>
                      </label>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </Card>
        </div>
      </AdminLayout>
  );
}
