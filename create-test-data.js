const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function createTestData() {
  try {
    console.log('üå± –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞...\n');
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–≤–µ—Ä–µ–π
    console.log('üìÅ –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    
    const modernCategory = await prisma.catalogCategory.create({
      data: {
        name: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–≤–µ—Ä–∏',
        level: 0,
        path: 'modern',
        sort_order: 1,
        is_active: true,
        products_count: 0
      }
    });
    
    const classicCategory = await prisma.catalogCategory.create({
      data: {
        name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –¥–≤–µ—Ä–∏',
        level: 0,
        path: 'classic',
        sort_order: 2,
        is_active: true,
        products_count: 0
      }
    });
    
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${modernCategory.name} (ID: ${modernCategory.id})`);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${classicCategory.name} (ID: ${classicCategory.id})\n`);
    
    // –°–æ–∑–¥–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('üé® –°–æ–∑–¥–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    
    const frontendModern = await prisma.frontendCategory.create({
      data: {
        name: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è',
        slug: 'modern',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–≤–µ—Ä–∏ –≤ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ',
        icon: 'modern',
        catalog_category_ids: JSON.stringify([modernCategory.id]),
        display_config: JSON.stringify({
          showStyle: true,
          showModel: true,
          showColor: true,
          showDimensions: true
        }),
        is_active: true
      }
    });
    
    const frontendClassic = await prisma.frontendCategory.create({
      data: {
        name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è',
        slug: 'classic',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –¥–≤–µ—Ä–∏ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ',
        icon: 'classic',
        catalog_category_ids: JSON.stringify([classicCategory.id]),
        display_config: JSON.stringify({
          showStyle: true,
          showModel: true,
          showColor: true,
          showDimensions: true
        }),
        is_active: true
      }
    });
    
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${frontendModern.name}`);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${frontendClassic.name}\n`);
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
    console.log('üö™ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã...');
    
    const testProducts = [
      {
        catalog_category_id: modernCategory.id,
        sku: 'DOOR-MOD-001',
        name: '–î–≤–µ—Ä—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º"',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–≤–µ—Ä—å –≤ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ',
        brand: 'Domeo',
        model: '–ú–∏–Ω–∏–º–∞–ª–∏–∑–º',
        series: 'Modern',
        base_price: 25000,
        properties_data: JSON.stringify({
          '–°—Ç–∏–ª—å': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è',
          '–ú–æ–¥–µ–ª—å': '–ú–∏–Ω–∏–º–∞–ª–∏–∑–º',
          '–ü–æ–∫—Ä—ã—Ç–∏–µ': '–≠–º–∞–ª—å',
          '–¶–≤–µ—Ç': '–ë–µ–ª—ã–π',
          '–®–∏—Ä–∏–Ω–∞': '800',
          '–í—ã—Å–æ—Ç–∞': '2000',
          '–¢–æ–ª—â–∏–Ω–∞': '40'
        }),
        is_active: true
      },
      {
        catalog_category_id: modernCategory.id,
        sku: 'DOOR-MOD-002',
        name: '–î–≤–µ—Ä—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è "–ì–µ–æ–º–µ—Ç—Ä–∏—è"',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–≤–µ—Ä—å —Å –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏',
        brand: 'Domeo',
        model: '–ì–µ–æ–º–µ—Ç—Ä–∏—è',
        series: 'Modern',
        base_price: 28000,
        properties_data: JSON.stringify({
          '–°—Ç–∏–ª—å': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è',
          '–ú–æ–¥–µ–ª—å': '–ì–µ–æ–º–µ—Ç—Ä–∏—è',
          '–ü–æ–∫—Ä—ã—Ç–∏–µ': '–®–ø–æ–Ω',
          '–¶–≤–µ—Ç': '–î—É–±',
          '–®–∏—Ä–∏–Ω–∞': '800',
          '–í—ã—Å–æ—Ç–∞': '2000',
          '–¢–æ–ª—â–∏–Ω–∞': '40'
        }),
        is_active: true
      },
      {
        catalog_category_id: classicCategory.id,
        sku: 'DOOR-CLASSIC-001',
        name: '–î–≤–µ—Ä—å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è "–ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç"',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –¥–≤–µ—Ä—å —Å —Ä–µ–∑–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏',
        brand: 'Domeo',
        model: '–ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç',
        series: 'Classic',
        base_price: 35000,
        properties_data: JSON.stringify({
          '–°—Ç–∏–ª—å': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è',
          '–ú–æ–¥–µ–ª—å': '–ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç',
          '–ü–æ–∫—Ä—ã—Ç–∏–µ': '–®–ø–æ–Ω',
          '–¶–≤–µ—Ç': '–û—Ä–µ—Ö',
          '–®–∏—Ä–∏–Ω–∞': '800',
          '–í—ã—Å–æ—Ç–∞': '2000',
          '–¢–æ–ª—â–∏–Ω–∞': '45'
        }),
        is_active: true
      },
      {
        catalog_category_id: classicCategory.id,
        sku: 'DOOR-CLASSIC-002',
        name: '–î–≤–µ—Ä—å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è "–í–∏–∫—Ç–æ—Ä–∏—è"',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –¥–≤–µ—Ä—å –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —Å—Ç–∏–ª–µ',
        brand: 'Domeo',
        model: '–í–∏–∫—Ç–æ—Ä–∏—è',
        series: 'Classic',
        base_price: 32000,
        properties_data: JSON.stringify({
          '–°—Ç–∏–ª—å': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è',
          '–ú–æ–¥–µ–ª—å': '–í–∏–∫—Ç–æ—Ä–∏—è',
          '–ü–æ–∫—Ä—ã—Ç–∏–µ': '–≠–º–∞–ª—å',
          '–¶–≤–µ—Ç': '–ö—Ä–µ–º–æ–≤—ã–π',
          '–®–∏—Ä–∏–Ω–∞': '800',
          '–í—ã—Å–æ—Ç–∞': '2000',
          '–¢–æ–ª—â–∏–Ω–∞': '45'
        }),
        is_active: true
      }
    ];
    
    for (const productData of testProducts) {
      const product = await prisma.product.create({
        data: productData
      });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: ${product.name} (${product.sku}) - ${product.base_price} —Ä—É–±`);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
    await prisma.catalogCategory.update({
      where: { id: modernCategory.id },
      data: { products_count: 2 }
    });
    
    await prisma.catalogCategory.update({
      where: { id: classicCategory.id },
      data: { products_count: 2 }
    });
    
    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
    console.log('\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: 2`);
    console.log(`  –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: 2`);
    console.log(`  –¢–æ–≤–∞—Ä—ã: 4`);
    console.log('\nüö™ –¢–µ–ø–µ—Ä—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createTestData();