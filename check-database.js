const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkDatabase() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
    const products = await prisma.product.count();
    const categories = await prisma.catalogCategory.count();
    const frontendCategories = await prisma.frontendCategory.count();
    const users = await prisma.user.count();
    
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`  –¢–æ–≤–∞—Ä—ã: ${products}`);
    console.log(`  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: ${categories}`);
    console.log(`  –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${frontendCategories}`);
    console.log(`  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${users}\n`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏
    const doorsProducts = await prisma.product.findMany({
      where: {
        OR: [
          { name: { contains: '–¥–≤–µ—Ä—å' } },
          { name: { contains: 'door' } },
          { sku: { contains: 'door' } }
        ]
      },
      take: 5
    });
    
    console.log('üö™ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–≤–µ—Ä–µ–π:');
    doorsProducts.forEach(product => {
      console.log(`  - ${product.sku}: ${product.name}`);
    });
    
    if (doorsProducts.length === 0) {
      console.log('  ‚ùå –¢–æ–≤–∞—Ä—ã –¥–≤–µ—Ä–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const doorCategories = await prisma.catalogCategory.findMany({
      where: {
        OR: [
          { name: { contains: '–¥–≤–µ—Ä—å', mode: 'insensitive' } },
          { name: { contains: 'door', mode: 'insensitive' } }
        ]
      }
    });
    
    console.log('\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–≤–µ—Ä–µ–π:');
    doorCategories.forEach(category => {
      console.log(`  - ${category.name} (ID: ${category.id})`);
    });
    
    if (doorCategories.length === 0) {
      console.log('  ‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–≤–µ—Ä–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkDatabase();