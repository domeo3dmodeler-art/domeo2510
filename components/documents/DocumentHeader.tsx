'use client';

import { useState } from 'react';

interface DocumentHeaderProps {
  document: any;
}

export function DocumentHeader({ document }: DocumentHeaderProps) {
  const [isEditing, setIsEditing] = useState(false);

  const getDocumentTypeLabel = (type: string) => {
    switch (type) {
      case 'invoice':
        return '–°—á–µ—Ç';
      case 'quote':
        return '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ';
      case 'order':
        return '–ó–∞–∫–∞–∑ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞';
      default:
        return '–î–æ–∫—É–º–µ–Ω—Ç';
    }
  };

  const getDocumentIcon = (type: string) => {
    switch (type) {
      case 'invoice':
        return 'üìÑ';
      case 'quote':
        return 'üìã';
      case 'order':
        return 'üì¶';
      default:
        return 'üìÑ';
    }
  };

  // –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–∑ API –≤ —Ä—É—Å—Å–∫–∏–µ (–∫–∞–∫ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö)
  const mapQuoteStatus = (apiStatus: string): string => {
    const statusMap: Record<string, string> = {
      'DRAFT': '–ß–µ—Ä–Ω–æ–≤–∏–∫',
      'SENT': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
      'ACCEPTED': '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ',
      'REJECTED': '–û—Ç–∫–∞–∑'
    };
    return statusMap[apiStatus] || '–ß–µ—Ä–Ω–æ–≤–∏–∫';
  };

  const mapInvoiceStatus = (apiStatus: string): string => {
    const statusMap: Record<string, string> = {
      'DRAFT': '–ß–µ—Ä–Ω–æ–≤–∏–∫',
      'SENT': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
      'PAID': '–û–ø–ª–∞—á–µ–Ω/–ó–∞–∫–∞–∑',
      'CANCELLED': '–û—Ç–º–µ–Ω–µ–Ω',
      'IN_PRODUCTION': '–ó–∞–∫–∞–∑ —Ä–∞–∑–º–µ—â–µ–Ω',
      'RECEIVED_FROM_SUPPLIER': '–ü–æ–ª—É—á–µ–Ω –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
      'COMPLETED': '–ò—Å–ø–æ–ª–Ω–µ–Ω'
    };
    return statusMap[apiStatus] || '–ß–µ—Ä–Ω–æ–≤–∏–∫';
  };

  const mapOrderStatus = (apiStatus: string): string => {
    const statusMap: Record<string, string> = {
      'DRAFT': '–ß–µ—Ä–Ω–æ–≤–∏–∫',
      'SENT': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
      'ACCEPTED': '–ü—Ä–∏–Ω—è—Ç',
      'REJECTED': '–û—Ç–∫–ª–æ–Ω–µ–Ω',
      'IN_PRODUCTION': '–í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ',
      'COMPLETED': '–ò—Å–ø–æ–ª–Ω–µ–Ω'
    };
    return statusMap[apiStatus] || '–ß–µ—Ä–Ω–æ–≤–∏–∫';
  };

  const getStatusDisplayName = (status: string, type: string): string => {
    switch (type) {
      case 'quote':
        return mapQuoteStatus(status);
      case 'invoice':
        return mapInvoiceStatus(status);
      case 'order':
        return mapOrderStatus(status);
      default:
        return status;
    }
  };

  const getStatusColor = (status: string, type: string): string => {
    const statusColors: Record<string, string> = {
      '–ß–µ—Ä–Ω–æ–≤–∏–∫': 'bg-gray-100 text-gray-800',
      '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω': 'bg-blue-100 text-blue-800',
      '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ': 'bg-blue-100 text-blue-800',
      '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ': 'bg-green-100 text-green-800',
      '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω': 'bg-green-100 text-green-800',
      '–û–ø–ª–∞—á–µ–Ω/–ó–∞–∫–∞–∑': 'bg-green-100 text-green-800',
      '–ó–∞–∫–∞–∑ —Ä–∞–∑–º–µ—â–µ–Ω': 'bg-yellow-100 text-yellow-800',
      '–í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ': 'bg-yellow-100 text-yellow-800',
      '–ü–æ–ª—É—á–µ–Ω –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞': 'bg-purple-100 text-purple-800',
      '–ò—Å–ø–æ–ª–Ω–µ–Ω': 'bg-green-100 text-green-800',
      '–û—Ç–∫–∞–∑': 'bg-red-100 text-red-800',
      '–û—Ç–∫–ª–æ–Ω–µ–Ω': 'bg-red-100 text-red-800',
      '–û—Ç–º–µ–Ω–µ–Ω': 'bg-red-100 text-red-800'
    };
    return statusColors[getStatusDisplayName(status, type)] || 'bg-gray-100 text-gray-800';
  };

  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <div className="flex items-start justify-between">
        <div className="flex items-start space-x-4">
          {/* –ò–∫–æ–Ω–∫–∞ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
          <div className="flex-shrink-0">
            <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center text-2xl">
              {getDocumentIcon(document.type)}
            </div>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="flex-1">
            <div className="flex items-center space-x-3 mb-2">
              <h1 className="text-2xl font-bold text-gray-900">
                {document.number}
              </h1>
              <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(document.status, document.type)}`}>
                {getStatusDisplayName(document.status, document.type)}
              </span>
            </div>
            
            <div className="space-y-1 text-sm text-gray-600">
              <p>
                <span className="font-medium">–¢–∏–ø:</span> {getDocumentTypeLabel(document.type)}
              </p>
              <p>
                <span className="font-medium">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</span>{' '}
                {new Date(document.created_at || document.createdAt).toLocaleDateString('ru-RU')}
              </p>
              <p>
                <span className="font-medium">–ö–ª–∏–µ–Ω—Ç:</span>{' '}
                <a 
                  href={`/clients/${document.client?.id}`}
                  className="text-blue-600 hover:text-blue-800 hover:underline"
                >
                  {document.client?.firstName} {document.client?.lastName} {document.client?.middleName}
                </a>
              </p>
              {document.client?.phone && (
                <p>
                  <span className="font-medium">–¢–µ–ª–µ—Ñ–æ–Ω:</span> {document.client.phone}
                </p>
              )}
              {document.client?.address && (
                <p>
                  <span className="font-medium">–ê–¥—Ä–µ—Å:</span> {document.client.address}
                </p>
              )}
            </div>
          </div>
        </div>

        {/* –°—É–º–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
        <div className="text-right">
          <div className="text-3xl font-bold text-gray-900">
            {document.total_amount?.toLocaleString('ru-RU')} ‚ÇΩ
          </div>
          {document.subtotal && document.subtotal !== document.total_amount && (
            <div className="text-sm text-gray-500 mt-1">
              –ë–µ–∑ –ù–î–°: {document.subtotal.toLocaleString('ru-RU')} ‚ÇΩ
            </div>
          )}
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      {document.notes && (
        <div className="mt-4 pt-4 border-t border-gray-200">
          <h3 className="text-sm font-medium text-gray-900 mb-2">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</h3>
          <p className="text-sm text-gray-600">{document.notes}</p>
        </div>
      )}

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <div className="mt-4 pt-4 border-t border-gray-200 flex items-center justify-between">
        <div className="flex items-center space-x-4 text-sm text-gray-500">
          <span>
            <span className="font-medium">–°–æ–∑–¥–∞–Ω:</span>{' '}
            {new Date(document.created_at || document.createdAt).toLocaleString('ru-RU')}
          </span>
          {document.created_by && (
            <span>
              <span className="font-medium">–ê–≤—Ç–æ—Ä:</span> {document.created_by}
            </span>
          )}
        </div>

        <div className="flex items-center space-x-2">
          <button
            onClick={() => setIsEditing(!isEditing)}
            className="px-3 py-1 text-sm text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-md transition-colors"
          >
            {isEditing ? '–û—Ç–º–µ–Ω–∏—Ç—å' : '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'}
          </button>
        </div>
      </div>
    </div>
  );
}
