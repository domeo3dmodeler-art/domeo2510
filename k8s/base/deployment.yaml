apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    app: app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
        env: prod
    spec:
      initContainers:
        - name: init-uploads
          image: busybox:1.36
          command: ["sh", "-c", "rm -rf /app/public/uploads/lost+found && mkdir -p /app/public/uploads/products && chmod -R 777 /app/public/uploads"]
          volumeMounts:
            - name: uploads
              mountPath: /app/public/uploads
      containers:
        - name: app
          image: cr.yandex/crpuein3jvjccnafs2vc/app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3001
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3001"
            - name: DATABASE_URL
              value: "postgresql://staging_user:staging_password@postgres:5432/domeo_staging"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: JWT_SECRET
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - name: uploads
              mountPath: /app/public/uploads
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: app-uploads

