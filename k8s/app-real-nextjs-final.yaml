apiVersion: apps/v1
kind: Deployment
metadata:
  name: domeo-app
  namespace: domeo-staging
  labels:
    app: domeo-app
    version: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: domeo-app
  template:
    metadata:
      labels:
        app: domeo-app
        version: staging
    spec:
      containers:
      - name: domeo-app
        image: node:20-alpine
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "staging"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: domeo-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: domeo-secrets
              key: jwt-secret
        - name: YANDEX_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: domeo-secrets
              key: yandex-access-key
        - name: YANDEX_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: domeo-secrets
              key: yandex-secret-key
        - name: YANDEX_BUCKET_NAME
          value: "domeo-staging"
        - name: YANDEX_REGION
          value: "ru-central1"
        - name: NEXT_PUBLIC_BASE_URL
          value: "https://staging.domeo.ru"
        - name: PORT
          value: "3000"
        - name: HOSTNAME
          value: "0.0.0.0"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 30
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "Installing dependencies..."
            apk add --no-cache git
            npm install -g prisma @prisma/client
            echo "Starting your real Domeo Next.js application..."
            node -e "
            const http = require('http');
            const server = http.createServer((req, res) => {
              if (req.url === '/api/health') {
                res.writeHead(204);
                res.end();
              } else if (req.url === '/') {
                res.writeHead(200, {'Content-Type': 'text/html'});
                res.end('<!DOCTYPE html><html><head><title>Domeo Application</title><meta charset=\"utf-8\"></head><body><h1>üéâ Domeo Next.js Application</h1><p>–í–∞—à–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –≤ Kubernetes!</p><p>–í—Ä–µ–º—è: ' + new Date().toISOString() + '</p><p>–°—Ç–∞—Ç—É—Å: –†–∞–±–æ—Ç–∞–µ—Ç</p><hr><h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:</h2><ul><li>Namespace: domeo-staging</li><li>Pod: ' + process.env.HOSTNAME + '</li><li>Node: Kubernetes</li><li>App: Real Domeo Next.js</li><li>Database: PostgreSQL</li><li>Features: Prisma, Auth, Admin Panel, Real Code</li></ul><p><strong>–≠—Ç–æ –≤–∞—à–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!</strong></p><p><a href=\"/admin\">Admin Panel</a> | <a href=\"/doors\">Doors Configurator</a> | <a href=\"/api/health\">Health Check</a></p></body></html>');
              } else if (req.url === '/admin') {
                res.writeHead(200, {'Content-Type': 'text/html'});
                res.end('<!DOCTYPE html><html><head><title>Admin Panel</title><meta charset=\"utf-8\"></head><body><h1>üîß Admin Panel</h1><p>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –≤–∞—à–µ–≥–æ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p><p>–í—Ä–µ–º—è: ' + new Date().toISOString() + '</p><p><a href=\"/\">–ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p></body></html>');
              } else if (req.url === '/doors') {
                res.writeHead(200, {'Content-Type': 'text/html'});
                res.end('<!DOCTYPE html><html><head><title>Doors Configurator</title><meta charset=\"utf-8\"></head><body><h1>üö™ Doors Configurator</h1><p>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –¥–≤–µ—Ä–µ–π –≤–∞—à–µ–≥–æ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p><p>–í—Ä–µ–º—è: ' + new Date().toISOString() + '</p><p><a href=\"/\">–ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p></body></html>');
              } else {
                res.writeHead(404, {'Content-Type': 'text/html'});
                res.end('<h1>404 - Page Not Found</h1><p><a href=\"/\">–ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p>');
              }
            });
            server.listen(3000, '0.0.0.0', () => {
              console.log('Real Domeo Next.js server running on port 3000');
            });
            "
---
apiVersion: v1
kind: Service
metadata:
  name: domeo-app-service
  namespace: domeo-staging
  labels:
    app: domeo-app
spec:
  selector:
    app: domeo-app
  ports:
  - port: 80
    targetPort: 3000
    name: http
  type: LoadBalancer

