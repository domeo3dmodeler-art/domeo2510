// lib/notifications/status-notifications.ts
// –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

export const STATUS_NOTIFICATIONS = {
  quote: {
    'SENT': {
      recipients: ['client'],
      message: '–í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ'
    },
    'ACCEPTED': {
      recipients: ['complectator'],
      message: '–ö–ª–∏–µ–Ω—Ç –ø—Ä–∏–Ω—è–ª –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ'
    },
    'REJECTED': {
      recipients: ['complectator'],
      message: '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–∏–ª –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ'
    }
  },
  invoice: {
    'SENT': {
      recipients: ['client'],
      message: '–í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—á–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É'
    },
    'PAID': {
      recipients: ['executor'],
      message: '–°—á–µ—Ç –æ–ø–ª–∞—á–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.'
    },
    'ORDERED': {
      recipients: ['complectator'],
      message: '–ó–∞–∫–∞–∑ —Ä–∞–∑–º–µ—â–µ–Ω —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.'
    },
    'RECEIVED_FROM_SUPPLIER': {
      recipients: ['complectator'],
      message: '–¢–æ–≤–∞—Ä –ø–æ–ª—É—á–µ–Ω –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.'
    },
    'COMPLETED': {
      recipients: ['complectator', 'client'],
      message: '–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω.'
    }
  },
  order: {
    'CONFIRMED': {
      recipients: ['executor'],
      message: '–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.'
    },
    'RECEIVED_FROM_SUPPLIER': {
      recipients: ['complectator'],
      message: '–¢–æ–≤–∞—Ä –ø–æ–ª—É—á–µ–Ω –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.'
    },
    'COMPLETED': {
      recipients: ['complectator', 'client'],
      message: '–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω.'
    }
  },
  supplier_order: {
    'ORDERED': {
      recipients: ['complectator'],
      message: '–ó–∞–∫–∞–∑ —Ä–∞–∑–º–µ—â–µ–Ω —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.'
    },
    'RECEIVED_FROM_SUPPLIER': {
      recipients: ['complectator'],
      message: '–¢–æ–≤–∞—Ä –ø–æ–ª—É—á–µ–Ω –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.'
    },
    'COMPLETED': {
      recipients: ['complectator'],
      message: '–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º.'
    }
  }
};

export async function sendStatusNotification(
  documentId: string,
  documentType: string,
  documentNumber: string,
  oldStatus: string,
  newStatus: string,
  clientId: string
) {
  console.log('üìß sendStatusNotification –≤—ã–∑–≤–∞–Ω–∞:', {
    documentId,
    documentType,
    documentNumber,
    oldStatus,
    newStatus,
    clientId
  });

  const notificationConfig = STATUS_NOTIFICATIONS[documentType as keyof typeof STATUS_NOTIFICATIONS];
  if (!notificationConfig) {
    console.warn('‚ö†Ô∏è –ù–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', documentType);
    return;
  }
  
  if (!notificationConfig[newStatus as keyof typeof notificationConfig]) {
    console.warn('‚ö†Ô∏è –ù–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞:', { documentType, newStatus });
    return;
  }
  
  const config = notificationConfig[newStatus as keyof typeof notificationConfig];
  console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', config);
  
  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç–æ—è—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ lib/notifications
  const { notifyUsersByRole } = await import('@/lib/notifications');
  
  for (const recipient of config.recipients) {
    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—é: ${recipient}`);
    
    if (recipient === 'client') {
      // –ö–ª–∏–µ–Ω—Ç—ã –Ω–µ –∑–∞—Ö–æ–¥—è—Ç –≤ —Å–∏—Å—Ç–µ–º—É, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      console.log(`‚ÑπÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É ${clientId}: ${config.message} (–ø—Ä–æ–ø—É—â–µ–Ω–æ, –∫–ª–∏–µ–Ω—Ç—ã –Ω–µ –∑–∞—Ö–æ–¥—è—Ç –≤ —Å–∏—Å—Ç–µ–º—É)`);
    } else if (recipient === 'complectator') {
      console.log('üë• –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º COMPLECTATOR');
      await notifyUsersByRole('COMPLECTATOR', {
        clientId: clientId || undefined,
        documentId,
        type: `${documentType}:${newStatus}`, // –í–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤ type –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–µ–¥—É–±–ª–∏–∫–∞—Ü–∏–∏
        title: `${config.message} [${documentNumber}]`,
        message: `${config.message} –î–æ–∫—É–º–µ–Ω—Ç: ${documentNumber}`
      });
    } else if (recipient === 'executor') {
      console.log('üë• –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º EXECUTOR');
      await notifyUsersByRole('EXECUTOR', {
        clientId: clientId || undefined,
        documentId,
        type: `${documentType}:${newStatus}`, // –í–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤ type –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–µ–¥—É–±–ª–∏–∫–∞—Ü–∏–∏
        title: `${config.message} [${documentNumber}]`,
        message: `${config.message} –î–æ–∫—É–º–µ–Ω—Ç: ${documentNumber}`
      });
    }
  }
  
  console.log('‚úÖ sendStatusNotification –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}
