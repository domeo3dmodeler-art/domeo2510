#!/bin/bash

# –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Domeo –Ω–∞ YC Kubernetes
# Usage: ./scripts/deploy-full.sh [staging|production]

set -e

ENVIRONMENT=${1:-staging}
REGISTRY="cr.yandex/your-registry"
IMAGE_NAME="domeo"
IMAGE_TAG=${2:-latest}

echo "üöÄ –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Domeo –Ω–∞ $ENVIRONMENT..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –∫–ª–∞—Å—Ç–µ—Ä—É Kubernetes"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: yc managed-kubernetes cluster get-credentials domeo-cluster --external"
    exit 1
fi

echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ –∫–ª–∞—Å—Ç–µ—Ä—É"

# 1. –°–æ–∑–¥–∞–Ω–∏–µ namespace
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ namespace..."
kubectl create namespace domeo-$ENVIRONMENT --dry-run=client -o yaml | kubectl apply -f -

# 2. –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PostgreSQL
echo "üóÑÔ∏è –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PostgreSQL..."
kubectl apply -f k8s/postgres.yaml

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
kubectl wait --for=condition=ready pod -l app=postgres -n domeo-$ENVIRONMENT --timeout=300s

echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"

# 3. –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
kubectl apply -f k8s/migrations.yaml

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π..."
kubectl wait --for=condition=complete job/domeo-migrations -n domeo-$ENVIRONMENT --timeout=300s

echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã"

# 4. –°–±–æ—Ä–∫–∞ –∏ push Docker –æ–±—Ä–∞–∑–∞
echo "üì¶ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG .

echo "‚¨ÜÔ∏è Push –æ–±—Ä–∞–∑–∞ –≤ registry..."
docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG

echo "‚úÖ –û–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω"

# 5. –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
kubectl apply -f k8s/app.yaml

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
kubectl wait --for=condition=ready pod -l app=domeo-app -n domeo-$ENVIRONMENT --timeout=300s

echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
kubectl get pods -n domeo-$ENVIRONMENT
kubectl get services -n domeo-$ENVIRONMENT
kubectl get ingress -n domeo-$ENVIRONMENT

# 7. Health check
echo "üè• Health check..."
kubectl run health-check --image=curlimages/curl --rm -i --restart=Never -- \
  curl -f http://domeo-app-service.domeo-$ENVIRONMENT.svc.cluster.local/api/health

echo "‚úÖ Health check –ø—Ä–æ–π–¥–µ–Ω"

# 8. –ü–æ–ª—É—á–µ–Ω–∏–µ URL
echo "üåê –ü–æ–ª—É—á–µ–Ω–∏–µ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
INGRESS_IP=$(kubectl get ingress domeo-ingress -n domeo-$ENVIRONMENT -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
if [ -z "$INGRESS_IP" ]; then
    INGRESS_IP=$(kubectl get ingress domeo-ingress -n domeo-$ENVIRONMENT -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
fi

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:"
echo "   Environment: $ENVIRONMENT"
echo "   Namespace: domeo-$ENVIRONMENT"
echo "   Image: $REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
echo "   Ingress IP: $INGRESS_IP"
echo ""
echo "üåê URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
if [ "$ENVIRONMENT" = "staging" ]; then
    echo "   https://staging.domeo.ru"
else
    echo "   https://domeo.ru"
fi
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   kubectl get pods -n domeo-$ENVIRONMENT"
echo "   kubectl logs -f deployment/domeo-app -n domeo-$ENVIRONMENT"
echo "   kubectl get services -n domeo-$ENVIRONMENT"
echo "   kubectl get ingress -n domeo-$ENVIRONMENT"
echo "   kubectl describe ingress domeo-ingress -n domeo-$ENVIRONMENT"
echo ""
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   kubectl top pods -n domeo-$ENVIRONMENT"
echo "   kubectl get events -n domeo-$ENVIRONMENT --sort-by='.lastTimestamp'"


