const fs = require('fs');
const path = require('path');

function analyzeProductManagementFeatures() {
  console.log('üîç –ê–ù–ê–õ–ò–ó –§–£–ù–ö–¶–ò–ô –£–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–û–í–ê–†–ê–ú–ò\n');

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º API endpoints –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
  const apiFiles = [
    'app/app/api/admin/products',
    'app/app/api/catalog/products',
    'app/app/api/admin/import',
    'app/app/api/admin/export'
  ];

  console.log('üìÅ –ê–ù–ê–õ–ò–ó API ENDPOINTS:');

  apiFiles.forEach(dir => {
    if (fs.existsSync(dir)) {
      const files = fs.readdirSync(dir, { recursive: true });
      const routeFiles = files.filter(file => file.includes('route.ts'));
      
      console.log(`\nüìÇ ${dir}:`);
      routeFiles.forEach(file => {
        const filePath = path.join(dir, file);
        const content = fs.readFileSync(filePath, 'utf8');
        const lines = content.split('\n').length;
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º HTTP –º–µ—Ç–æ–¥—ã
        const methods = [];
        if (content.includes('export async function GET')) methods.push('GET');
        if (content.includes('export async function POST')) methods.push('POST');
        if (content.includes('export async function PUT')) methods.push('PUT');
        if (content.includes('export async function DELETE')) methods.push('DELETE');
        
        console.log(`   - ${file}: ${methods.join(', ')} (${lines} —Å—Ç—Ä–æ–∫)`);
      });
    } else {
      console.log(`\n‚ùå ${dir}: –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    }
  });

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
  console.log('\nüìÅ –ê–ù–ê–õ–ò–ó –ö–û–ú–ü–û–ù–ï–ù–¢–û–í:');
  
  const componentFiles = [
    'app/components/admin/TemplateManager.tsx',
    'app/components/admin/PriceListExporter.tsx',
    'app/components/import/SimplifiedImportDialog.tsx'
  ];

  componentFiles.forEach(file => {
    if (fs.existsSync(file)) {
      const content = fs.readFileSync(file, 'utf8');
      const lines = content.split('\n').length;
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
      const functions = content.match(/const\s+(\w+)\s*=/g) || [];
      const functionNames = functions.map(f => f.replace('const ', '').replace(' =', ''));
      
      console.log(`\nüìÑ ${file}:`);
      console.log(`   - –°—Ç—Ä–æ–∫: ${lines}`);
      console.log(`   - –§—É–Ω–∫—Ü–∏–∏: ${functionNames.join(', ')}`);
    }
  });

  console.log('\nüí° –¢–ï–ö–£–©–ò–ï –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø:');
  console.log('   ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º');
  console.log('   ‚úÖ –ò–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ Excel');
  console.log('   ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞');
  console.log('   ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏ –∏–º–ø–æ—Ä—Ç–∞');
  console.log('   ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π');
  console.log('   ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');

  console.log('\nüîß –ü–†–ï–î–õ–ê–ì–ê–ï–ú–´–ï –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò:');
  console.log('   1. –ú–∞—Å—Å–æ–≤–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤');
  console.log('   2. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤');
  console.log('   3. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤');
  console.log('   4. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –º–µ–∂–¥—É –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏');
  console.log('   5. –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤');
  console.log('   6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–æ–≤–∞—Ä–∞–º');
  console.log('   7. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö');
  console.log('   8. –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤');
  console.log('   9. –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤');
  console.log('   10. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω');

  console.log('\nüìã –ü–õ–ê–ù –†–ï–ê–õ–ò–ó–ê–¶–ò–ò:');
  console.log('   –≠—Ç–∞–ø 1: –ú–∞—Å—Å–æ–≤–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
  console.log('   –≠—Ç–∞–ø 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–∏—Å–∫');
  console.log('   –≠—Ç–∞–ø 3: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏');
  console.log('   –≠—Ç–∞–ø 4: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã');
}

analyzeProductManagementFeatures();
