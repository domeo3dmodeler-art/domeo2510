const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function createCanonicalTemplate() {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω –¥–ª—è –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π...');
    
    const categoryId = 'cmg50xcgs001cv7mn0tdyk1wo';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —à–∞–±–ª–æ–Ω
    const existingTemplate = await prisma.importTemplate.findUnique({
      where: { catalog_category_id: categoryId }
    });
    
    if (existingTemplate) {
      console.log('‚ö†Ô∏è –®–∞–±–ª–æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º...');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —à–∞–±–ª–æ–Ω
      const updatedTemplate = await prisma.importTemplate.update({
        where: { id: existingTemplate.id },
        data: {
          name: '–ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π',
          description: '–ï–¥–∏–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π –±–µ–∑ –º–∞–ø–ø–∏–Ω–≥–∞',
          required_fields: JSON.stringify([
            '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
            '–ù–∞–∑–≤–∞–Ω–∏–µ',
            '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)',
            'Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web',
            'Domeo_–°—Ç–∏–ª—å Web',
            '–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è',
            'Domeo_–¶–≤–µ—Ç',
            '–®–∏—Ä–∏–Ω–∞/–º–º',
            '–í—ã—Å–æ—Ç–∞/–º–º'
          ]),
          calculator_fields: JSON.stringify([
            'Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web',
            'Domeo_–°—Ç–∏–ª—å Web',
            '–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è',
            'Domeo_–¶–≤–µ—Ç',
            '–®–∏—Ä–∏–Ω–∞/–º–º',
            '–í—ã—Å–æ—Ç–∞/–º–º',
            '–¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è',
            '–ö—Ä–æ–º–∫–∞',
            '–ú–æ–ª–¥–∏–Ω–≥',
            '–°—Ç–µ–∫–ª–æ'
          ]),
          export_fields: JSON.stringify([
            '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
            '–ù–∞–∑–≤–∞–Ω–∏–µ',
            '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)',
            'Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web',
            'Domeo_–°—Ç–∏–ª—å Web',
            '–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è',
            'Domeo_–¶–≤–µ—Ç',
            '–®–∏—Ä–∏–Ω–∞/–º–º',
            '–í—ã—Å–æ—Ç–∞/–º–º',
            '–¢–æ–ª—â–∏–Ω–∞/–º–º',
            '–ï–¥.–∏–∑–º.',
            '–°–∫–ª–∞–¥/–∑–∞–∫–∞–∑',
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
            '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
            '–¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è',
            '–ö—Ä–æ–º–∫–∞',
            '–°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ –∫—Ä–æ–º–∫—É',
            '–ú–æ–ª–¥–∏–Ω–≥',
            '–°—Ç–µ–∫–ª–æ',
            'Domeo_–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã_1–°',
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è Web',
            '–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Ç–∞ –¥–ª—è Web',
            '–¶–µ–Ω–æ–≤–∞—è –≥—Ä—É–ø–ø–∞',
            'photos'
          ]),
          template_config: JSON.stringify({
            version: '2.0',
            type: 'canonical',
            mapping_required: false,
            strict_field_matching: true,
            description: '–ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω –¥–ª—è –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π. –ü–æ–ª—è –≤ Excel —Ñ–∞–π–ª–µ –¥–æ–ª–∂–Ω—ã —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ø–æ–ª—è–º–∏ —à–∞–±–ª–æ–Ω–∞.'
          }),
          field_mappings: JSON.stringify({}), // –ü—É—Å—Ç–æ–π –º–∞–ø–ø–∏–Ω–≥ - –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å
          validation_rules: JSON.stringify({
            required_fields: [
              '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–ù–∞–∑–≤–∞–Ω–∏–µ',
              '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)'
            ],
            price_fields: [
              '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)'
            ],
            dimension_fields: [
              '–®–∏—Ä–∏–Ω–∞/–º–º',
              '–í—ã—Å–æ—Ç–∞/–º–º',
              '–¢–æ–ª—â–∏–Ω–∞/–º–º'
            ],
            photo_fields: [
              'photos'
            ]
          }),
          updated_at: new Date()
        }
      });
      
      console.log('‚úÖ –®–∞–±–ª–æ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω:', updatedTemplate.id);
      
    } else {
      console.log('üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω...');
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω
      const newTemplate = await prisma.importTemplate.create({
        data: {
          catalog_category_id: categoryId,
          name: '–ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π',
          description: '–ï–¥–∏–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π –±–µ–∑ –º–∞–ø–ø–∏–Ω–≥–∞',
          required_fields: JSON.stringify([
            '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
            '–ù–∞–∑–≤–∞–Ω–∏–µ',
            '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)',
            'Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web',
            'Domeo_–°—Ç–∏–ª—å Web',
            '–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è',
            'Domeo_–¶–≤–µ—Ç',
            '–®–∏—Ä–∏–Ω–∞/–º–º',
            '–í—ã—Å–æ—Ç–∞/–º–º'
          ]),
          calculator_fields: JSON.stringify([
            'Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web',
            'Domeo_–°—Ç–∏–ª—å Web',
            '–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è',
            'Domeo_–¶–≤–µ—Ç',
            '–®–∏—Ä–∏–Ω–∞/–º–º',
            '–í—ã—Å–æ—Ç–∞/–º–º',
            '–¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è',
            '–ö—Ä–æ–º–∫–∞',
            '–ú–æ–ª–¥–∏–Ω–≥',
            '–°—Ç–µ–∫–ª–æ'
          ]),
          export_fields: JSON.stringify([
            '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
            '–ù–∞–∑–≤–∞–Ω–∏–µ',
            '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)',
            'Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web',
            'Domeo_–°—Ç–∏–ª—å Web',
            '–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è',
            'Domeo_–¶–≤–µ—Ç',
            '–®–∏—Ä–∏–Ω–∞/–º–º',
            '–í—ã—Å–æ—Ç–∞/–º–º',
            '–¢–æ–ª—â–∏–Ω–∞/–º–º',
            '–ï–¥.–∏–∑–º.',
            '–°–∫–ª–∞–¥/–∑–∞–∫–∞–∑',
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
            '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
            '–¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è',
            '–ö—Ä–æ–º–∫–∞',
            '–°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ –∫—Ä–æ–º–∫—É',
            '–ú–æ–ª–¥–∏–Ω–≥',
            '–°—Ç–µ–∫–ª–æ',
            'Domeo_–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã_1–°',
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è Web',
            '–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Ç–∞ –¥–ª—è Web',
            '–¶–µ–Ω–æ–≤–∞—è –≥—Ä—É–ø–ø–∞',
            'photos'
          ]),
          template_config: JSON.stringify({
            version: '2.0',
            type: 'canonical',
            mapping_required: false,
            strict_field_matching: true,
            description: '–ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω –¥–ª—è –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π. –ü–æ–ª—è –≤ Excel —Ñ–∞–π–ª–µ –¥–æ–ª–∂–Ω—ã —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ø–æ–ª—è–º–∏ —à–∞–±–ª–æ–Ω–∞.'
          }),
          field_mappings: JSON.stringify({}), // –ü—É—Å—Ç–æ–π –º–∞–ø–ø–∏–Ω–≥ - –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å
          validation_rules: JSON.stringify({
            required_fields: [
              '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–ù–∞–∑–≤–∞–Ω–∏–µ',
              '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)'
            ],
            price_fields: [
              '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)'
            ],
            dimension_fields: [
              '–®–∏—Ä–∏–Ω–∞/–º–º',
              '–í—ã—Å–æ—Ç–∞/–º–º',
              '–¢–æ–ª—â–∏–Ω–∞/–º–º'
            ],
            photo_fields: [
              'photos'
            ]
          }),
          is_active: true
        }
      });
      
      console.log('‚úÖ –ù–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω:', newTemplate.id);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const finalTemplate = await prisma.importTemplate.findUnique({
      where: { catalog_category_id: categoryId },
      include: {
        catalog_category: {
          select: { name: true }
        }
      }
    });
    
    console.log('üìã –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω:');
    console.log('  ID:', finalTemplate?.id);
    console.log('  –ù–∞–∑–≤–∞–Ω–∏–µ:', finalTemplate?.name);
    console.log('  –ö–∞—Ç–µ–≥–æ—Ä–∏—è:', finalTemplate?.catalog_category?.name);
    console.log('  –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:', JSON.parse(finalTemplate?.required_fields || '[]'));
    console.log('  –ü–æ–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞:', JSON.parse(finalTemplate?.calculator_fields || '[]'));
    console.log('  –ü–æ–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞:', JSON.parse(finalTemplate?.export_fields || '[]'));
    
    console.log('üéâ –ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createCanonicalTemplate();
