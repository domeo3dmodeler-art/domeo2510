const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function optimizeDatabase() {
  try {
    console.log('üîß –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•\n');

    // 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PRAGMA –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ SQLite
    console.log('1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PRAGMA –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ SQLite...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º $queryRaw –¥–ª—è PRAGMA –∫–æ–º–∞–Ω–¥
    await prisma.$queryRaw`PRAGMA journal_mode = WAL`;
    await prisma.$queryRaw`PRAGMA synchronous = NORMAL`;
    await prisma.$queryRaw`PRAGMA cache_size = 10000`;
    await prisma.$queryRaw`PRAGMA temp_store = MEMORY`;
    await prisma.$queryRaw`PRAGMA mmap_size = 268435456`;
    
    console.log('   ‚úÖ PRAGMA –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');

    // 2. –ê–Ω–∞–ª–∏–∑ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü
    console.log('\n2. –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü...');
    
    await prisma.$queryRaw`ANALYZE`;
    console.log('   ‚úÖ –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü –≤—ã–ø–æ–ª–Ω–µ–Ω');

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–Ω–¥–µ–∫—Å–æ–≤
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤...');
    
    const indexes = await prisma.$queryRaw`
      SELECT name, sql FROM sqlite_master 
      WHERE type='index' AND sql IS NOT NULL
      ORDER BY name
    `;
    
    console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–Ω–¥–µ–∫—Å–æ–≤: ${indexes.length}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã
    const keyIndexes = indexes.filter(idx => 
      idx.name.includes('products') || 
      idx.name.includes('catalog_category')
    );
    
    console.log('   üìã –ö–ª—é—á–µ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã:');
    keyIndexes.forEach(idx => {
      console.log(`     - ${idx.name}`);
    });

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    console.log('\n4. –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...');
    
    // –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
    const start1 = Date.now();
    const products = await prisma.product.findMany({
      where: { catalog_category_id: 'cmg50xcgs001cv7mn0tdyk1wo' },
      select: { id: true, sku: true, name: true },
      take: 100
    });
    const time1 = Date.now() - start1;
    
    // –¢–µ—Å—Ç –ø–æ–¥—Å—á–µ—Ç–∞
    const start2 = Date.now();
    const count = await prisma.product.count({
      where: { catalog_category_id: 'cmg50xcgs001cv7mn0tdyk1wo' }
    });
    const time2 = Date.now() - start2;
    
    console.log(`   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:`);
    console.log(`     - –ü–æ–∏—Å–∫ 100 —Ç–æ–≤–∞—Ä–æ–≤: ${time1}ms`);
    console.log(`     - –ü–æ–¥—Å—á–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤: ${time2}ms`);
    console.log(`     - –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${count}`);

    // 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    console.log('\n5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:');
    
    if (time1 > 50) {
      console.log('   ‚ö†Ô∏è  –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –º–æ–∂–Ω–æ —É—Å–∫–æ—Ä–∏—Ç—å');
    } else {
      console.log('   ‚úÖ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ');
    }
    
    if (time2 > 30) {
      console.log('   ‚ö†Ô∏è  –ü–æ–¥—Å—á–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –º–æ–∂–Ω–æ —É—Å–∫–æ—Ä–∏—Ç—å');
    } else {
      console.log('   ‚úÖ –ü–æ–¥—Å—á–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ');
    }

    console.log('\nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('   - –†–µ–≥—É–ª—è—Ä–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å ANALYZE –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    console.log('   - –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã');
    console.log('   - –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
    console.log('   - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å JSON –ø–æ–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏');

    console.log('\nüéâ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–• –ó–ê–í–ï–†–®–ï–ù–ê!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

optimizeDatabase();