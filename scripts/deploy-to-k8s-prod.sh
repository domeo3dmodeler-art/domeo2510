#!/bin/bash

# üöÄ –î–µ–ø–ª–æ–π –≤ Kubernetes Production
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (—Å–º. DEPLOY_SETUP_GUIDE.md –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π)
CLUSTER_ID="${CLUSTER_ID:-cat9eenl393qj44riti4}"
NAMESPACE="${NAMESPACE:-prod}"
REGISTRY="${REGISTRY:-cr.yandex/crpuein3jvjccnafs2vc}"
IMAGE_NAME="${IMAGE_NAME:-app}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–º. –≤ DEPLOY_SETUP_GUIDE.md
if [ -z "$YC_SERVICE_ACCOUNT_KEY_FILE" ] && [ -z "$YC_SA_KEY" ] && [ -z "$YC_SA_JSON" ]; then
    error "–ù–µ —É–∫–∞–∑–∞–Ω –∫–ª—é—á —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Yandex Cloud"
    echo ""
    echo "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–º. –≤ DEPLOY_SETUP_GUIDE.md"
    echo ""
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:"
    echo "  export YC_SERVICE_ACCOUNT_KEY_FILE=/path/to/sa-key.json"
    echo "  export YC_SA_KEY='<JSON content>'"
    echo "  export YC_SA_JSON='<JSON content>'"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è JSON –∫–ª—é—á–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ -z "$YC_SERVICE_ACCOUNT_KEY_FILE" ]; then
    TEMP_KEY_FILE=$(mktemp)
    if [ -n "$YC_SA_KEY" ]; then
        echo "$YC_SA_KEY" > "$TEMP_KEY_FILE"
    elif [ -n "$YC_SA_JSON" ]; then
        echo "$YC_SA_JSON" > "$TEMP_KEY_FILE"
    fi
    export YC_SERVICE_ACCOUNT_KEY_FILE="$TEMP_KEY_FILE"
    trap "rm -f $TEMP_KEY_FILE" EXIT
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è YC CLI
if ! command -v yc &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º YC CLI..."
    curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
    export PATH="$HOME/yandex-cloud/bin:$PATH"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è kubectl
if ! command -v kubectl &> /dev/null; then
    error "kubectl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: https://kubernetes.io/docs/tasks/tools/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: https://docs.docker.com/get-docker/"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–≥ –æ–±—Ä–∞–∑–∞
if [ -z "$1" ]; then
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏
    TAG="v$(date +%Y%m%d%H%M%S)"
    warning "–¢–µ–≥ –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º: $TAG"
else
    TAG="$1"
fi

FULL_IMAGE="${REGISTRY}/${IMAGE_NAME}:${TAG}"

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –≤ Kubernetes Production"
log "  –ö–ª–∞—Å—Ç–µ—Ä: $CLUSTER_ID"
log "  Namespace: $NAMESPACE"
log "  –û–±—Ä–∞–∑: $FULL_IMAGE"

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ YC
log "üîê –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ Yandex Cloud..."
if [ -n "$YC_CLOUD_ID" ]; then
    yc config set cloud-id "$YC_CLOUD_ID"
fi
if [ -n "$YC_FOLDER_ID" ]; then
    yc config set folder-id "$YC_FOLDER_ID"
fi

if ! yc iam create-token > /dev/null 2>&1; then
    error "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Yandex Cloud. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ YC_SERVICE_ACCOUNT_KEY_FILE"
    exit 1
fi
success "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ YC —É—Å–ø–µ—à–Ω–∞"

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Container Registry –¥–ª—è Docker
log "üê≥ –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ Container Registry..."
yc iam create-token | docker login cr.yandex -u iam --password-stdin
success "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Container Registry —É—Å–ø–µ—à–Ω–∞"

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
log "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."
docker build -t "$FULL_IMAGE" .
success "‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"

# –ü—É—à –æ–±—Ä–∞–∑–∞
log "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–∑ –≤ registry..."
docker push "$FULL_IMAGE"
success "‚úÖ –û–±—Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: $FULL_IMAGE"

# –ü–æ–ª—É—á–µ–Ω–∏–µ kubeconfig
log "üìã –ü–æ–ª—É—á–∞–µ–º kubeconfig –¥–ª—è –∫–ª–∞—Å—Ç–µ—Ä–∞..."
yc managed-kubernetes cluster get-credentials --id "$CLUSTER_ID" --external --force
kubectl config use-context yc-domeo-prod 2>/dev/null || kubectl config use-context yc-default 2>/dev/null || true
kubectl config set-context --current --namespace="$NAMESPACE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
if ! kubectl -n "$NAMESPACE" get nodes > /dev/null 2>&1; then
    error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É"
    exit 1
fi
success "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–ª–∞—Å—Ç–µ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ deployment
log "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º deployment —Å –Ω–æ–≤—ã–º –æ–±—Ä–∞–∑–æ–º..."
kubectl -n "$NAMESPACE" set image deployment/app app="$FULL_IMAGE"

log "‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è rollout..."
if kubectl -n "$NAMESPACE" rollout status deployment/app --timeout=180s; then
    success "‚úÖ Rollout –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    error "‚ùå Rollout –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å:"
    kubectl -n "$NAMESPACE" get pods -l app=app
    kubectl -n "$NAMESPACE" describe deployment/app | grep -A 10 "Events:"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å deployment..."
kubectl -n "$NAMESPACE" get deploy app
kubectl -n "$NAMESPACE" get pods -l app=app

success "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
log "  –û–±—Ä–∞–∑: $FULL_IMAGE"
log "  URL: http://158.160.202.117/"
log "  Health: http://158.160.202.117/api/health"

