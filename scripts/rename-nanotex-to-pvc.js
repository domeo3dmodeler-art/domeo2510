// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ "–ù–∞–Ω–æ—Ç–µ–∫—Å" –Ω–∞ "–ü–í–•" –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–î–≤–µ—Ä–∏"
// –í—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ API

const fetch = require('node-fetch');

const API_URL = 'http://localhost:3001/api/admin/products/rename-property';
const CATEGORY_ID = 'cmg50xcgs001cv7mn0tdyk1wo'; // –ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏
const PROPERTY_NAME = '–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è';
const OLD_VALUE = '–ù–∞–Ω–æ—Ç–µ–∫—Å';
const NEW_VALUE = '–ü–í–•';

async function renameProperty() {
  try {
    console.log('üîÑ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞...');
    console.log(`  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${CATEGORY_ID}`);
    console.log(`  –°–≤–æ–π—Å—Ç–≤–æ: "${PROPERTY_NAME}"`);
    console.log(`  –°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: "${OLD_VALUE}"`);
    console.log(`  –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: "${NEW_VALUE}"`);

    const response = await fetch(API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        categoryId: CATEGORY_ID,
        propertyName: PROPERTY_NAME,
        oldValue: OLD_VALUE,
        newValue: NEW_VALUE
      })
    });

    const result = await response.json();

    if (result.success) {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!');
      console.log(`  –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${result.stats.totalProducts}`);
      console.log(`  –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${result.stats.updated}`);
      console.log(`  –û—à–∏–±–æ–∫: ${result.stats.errors}`);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞:', result.error || result.message);
      process.exit(1);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', error.message);
    process.exit(1);
  }
}

renameProperty();

