const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function clearAllData() {
  try {
    console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    console.log('üìÑ –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º...');
    await prisma.supplierOrderItem.deleteMany();
    
    console.log('üìÑ –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º...');
    await prisma.supplierOrder.deleteMany();
    
    console.log('üìÑ –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤...');
    await prisma.orderItem.deleteMany();
    
    console.log('üìÑ –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã...');
    await prisma.order.deleteMany();
    
    console.log('üìÑ –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—á–µ—Ç–æ–≤...');
    await prisma.invoiceItem.deleteMany();
    
    console.log('üìÑ –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—á–µ—Ç–∞...');
    await prisma.invoice.deleteMany();
    
    console.log('üìÑ –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ö–ü...');
    await prisma.quoteItem.deleteMany();
    
    console.log('üìÑ –£–¥–∞–ª—è–µ–º –≤—Å–µ –ö–ü...');
    await prisma.quote.deleteMany();
    
    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    console.log('üîî –£–¥–∞–ª—è–µ–º –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    await prisma.notification.deleteMany();
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    console.log('üë• –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤...');
    await prisma.client.deleteMany();
    
    console.log('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –ø—É—Å—Ç—ã
    const counts = {
      clients: await prisma.client.count(),
      quotes: await prisma.quote.count(),
      quoteItems: await prisma.quoteItem.count(),
      invoices: await prisma.invoice.count(),
      invoiceItems: await prisma.invoiceItem.count(),
      orders: await prisma.order.count(),
      orderItems: await prisma.orderItem.count(),
      supplierOrders: await prisma.supplierOrder.count(),
      supplierOrderItems: await prisma.supplierOrderItem.count(),
      notifications: await prisma.notification.count()
    };
    
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:');
    console.log(`üë• –ö–ª–∏–µ–Ω—Ç—ã: ${counts.clients}`);
    console.log(`üìÑ –ö–ü: ${counts.quotes}`);
    console.log(`üìÑ –≠–ª–µ–º–µ–Ω—Ç—ã –ö–ü: ${counts.quoteItems}`);
    console.log(`üìÑ –°—á–µ—Ç–∞: ${counts.invoices}`);
    console.log(`üìÑ –≠–ª–µ–º–µ–Ω—Ç—ã —Å—á–µ—Ç–æ–≤: ${counts.invoiceItems}`);
    console.log(`üìÑ –ó–∞–∫–∞–∑—ã: ${counts.orders}`);
    console.log(`üìÑ –≠–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤: ${counts.orderItems}`);
    console.log(`üìÑ –ó–∞–∫–∞–∑—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º: ${counts.supplierOrders}`);
    console.log(`üìÑ –≠–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º: ${counts.supplierOrderItems}`);
    console.log(`üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${counts.notifications}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

clearAllData();
