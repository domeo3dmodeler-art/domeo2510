import { NextRequest, NextResponse } from "next/server";

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
export async function GET(req: NextRequest) {
  try {
    // –í—Ä–µ–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    const categories = [
      {
        id: "doors",
        name: "–î–≤–µ—Ä–∏",
        description: "–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∏ –≤—Ö–æ–¥–Ω—ã–µ –¥–≤–µ—Ä–∏",
        icon: "üö™",
        is_main: true,
        parent_id: null,
        properties: [], // –°—Ö–µ–º–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ø—Ä–∞–π—Å–∞
        import_mapping: {}, // –°–æ–∑–¥–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ø—Ä–∞–π—Å–∞
        subcategories: [
          {
            id: "door-handles",
            name: "–†—É—á–∫–∏",
            description: "–†—É—á–∫–∏ –¥–ª—è –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π",
            icon: "üîò",
            is_main: false,
            parent_id: "doors",
            properties: [
              { key: "name", name: "–ù–∞–∑–≤–∞–Ω–∏–µ", type: "text", required: true },
              { key: "supplier_name", name: "–ü–æ—Å—Ç–∞–≤—â–∏–∫", type: "text", required: true },
              { key: "supplier_sku", name: "–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", type: "text", required: true },
              { key: "price_opt", name: "–¶–µ–Ω–∞ –æ–ø—Ç–æ–≤–∞—è", type: "number", required: true },
              { key: "price_group_multiplier", name: "–ú–Ω–æ–∂–∏—Ç–µ–ª—å –≥—Ä—É–ø–ø—ã", type: "number", required: true }
            ],
            import_mapping: {
              "name": "name",
              "supplier_name": "supplier_name",
              "supplier_sku": "supplier_sku", 
              "price_opt": "price_opt",
              "price_group_multiplier": "price_group_multiplier"
            }
          },
          {
            id: "door-kits",
            name: "–ö–æ–º–ø–ª–µ–∫—Ç—ã —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã",
            description: "–ö–æ–º–ø–ª–µ–∫—Ç—ã —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã –¥–ª—è –¥–≤–µ—Ä–µ–π",
            icon: "üîß",
            is_main: false,
            parent_id: "doors",
            properties: [
              { key: "name", name: "–ù–∞–∑–≤–∞–Ω–∏–µ", type: "text", required: true },
              { key: "group", name: "–ì—Ä—É–ø–ø–∞", type: "number", required: false },
              { key: "price_rrc", name: "–¶–µ–Ω–∞ –†–†–¶", type: "number", required: true }
            ],
            import_mapping: {
              "name": "name",
              "group": "group",
              "price_rrc": "price_rrc"
            }
          }
        ],
        created_at: "2025-01-15T10:00:00Z",
        updated_at: "2025-01-15T10:00:00Z"
      },
      {
        id: "flooring",
        name: "–ù–∞–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è",
        description: "–õ–∞–º–∏–Ω–∞—Ç, –ø–∞—Ä–∫–µ—Ç, –ª–∏–Ω–æ–ª–µ—É–º",
        icon: "üè†",
        is_main: true,
        parent_id: null,
        properties: [
          { key: "model", name: "–ú–æ–¥–µ–ª—å", type: "text", required: true },
          { key: "material", name: "–ú–∞—Ç–µ—Ä–∏–∞–ª", type: "text", required: true },
          { key: "color", name: "–¶–≤–µ—Ç", type: "text", required: true },
          { key: "thickness", name: "–¢–æ–ª—â–∏–Ω–∞ (–º–º)", type: "number", required: true },
          { key: "price_rrc", name: "–¶–µ–Ω–∞ –†–†–¶", type: "number", required: true }
        ],
        import_mapping: {
          "model": "model",
          "material": "material",
          "color": "color", 
          "thickness": "thickness",
          "price_rrc": "price_rrc"
        },
        subcategories: [
          {
            id: "flooring-accessories",
            name: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã",
            description: "–ü–ª–∏–Ω—Ç—É—Å—ã, –ø–æ—Ä–æ–≥–∏, –ø–æ–¥–ª–æ–∂–∫–∏",
            icon: "üìè",
            is_main: false,
            parent_id: "flooring",
            properties: [
              { key: "name", name: "–ù–∞–∑–≤–∞–Ω–∏–µ", type: "text", required: true },
              { key: "type", name: "–¢–∏–ø", type: "text", required: true },
              { key: "price_rrc", name: "–¶–µ–Ω–∞ –†–†–¶", type: "number", required: true }
            ],
            import_mapping: {
              "name": "name",
              "type": "type",
              "price_rrc": "price_rrc"
            }
          }
        ],
        created_at: "2025-01-15T10:00:00Z",
        updated_at: "2025-01-15T10:00:00Z"
      },
      {
        id: "kitchens",
        name: "–ö—É—Ö–Ω–∏",
        description: "–ö—É—Ö–æ–Ω–Ω—ã–µ –≥–∞—Ä–Ω–∏—Ç—É—Ä—ã –∏ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ",
        icon: "üç≥",
        is_main: true,
        parent_id: null,
        properties: [
          { key: "model", name: "–ú–æ–¥–µ–ª—å", type: "text", required: true },
          { key: "material", name: "–ú–∞—Ç–µ—Ä–∏–∞–ª", type: "text", required: true },
          { key: "color", name: "–¶–≤–µ—Ç", type: "text", required: true },
          { key: "price_rrc", name: "–¶–µ–Ω–∞ –†–†–¶", type: "number", required: true }
        ],
        import_mapping: {
          "model": "model",
          "material": "material",
          "color": "color",
          "price_rrc": "price_rrc"
        },
        subcategories: [
          {
            id: "kitchen-hardware",
            name: "–§—É—Ä–Ω–∏—Ç—É—Ä–∞",
            description: "–†—É—á–∫–∏, –ø–µ—Ç–ª–∏, –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∏–µ –¥–ª—è –∫—É—Ö–æ–Ω—å",
            icon: "üî©",
            is_main: false,
            parent_id: "kitchens",
            properties: [
              { key: "name", name: "–ù–∞–∑–≤–∞–Ω–∏–µ", type: "text", required: true },
              { key: "type", name: "–¢–∏–ø", type: "text", required: true },
              { key: "price_rrc", name: "–¶–µ–Ω–∞ –†–†–¶", type: "number", required: true }
            ],
            import_mapping: {
              "name": "name",
              "type": "type",
              "price_rrc": "price_rrc"
            }
          }
        ],
        created_at: "2025-01-15T10:00:00Z",
        updated_at: "2025-01-15T10:00:00Z"
      },
      {
        id: "tiles",
        name: "–ü–ª–∏—Ç–∫–∞",
        description: "–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è –ø–ª–∏—Ç–∫–∞ –¥–ª—è —Å—Ç–µ–Ω –∏ –ø–æ–ª–∞",
        icon: "üß±",
        is_main: true,
        parent_id: null,
        properties: [
          { key: "model", name: "–ú–æ–¥–µ–ª—å", type: "text", required: true },
          { key: "material", name: "–ú–∞—Ç–µ—Ä–∏–∞–ª", type: "text", required: true },
          { key: "color", name: "–¶–≤–µ—Ç", type: "text", required: true },
          { key: "size", name: "–†–∞–∑–º–µ—Ä", type: "text", required: true },
          { key: "price_rrc", name: "–¶–µ–Ω–∞ –†–†–¶", type: "number", required: true }
        ],
        import_mapping: {
          "model": "model",
          "material": "material",
          "color": "color",
          "size": "size",
          "price_rrc": "price_rrc"
        },
        subcategories: [
          {
            id: "tile-accessories",
            name: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã",
            description: "–ó–∞—Ç–∏—Ä–∫–∏, –∫–ª–µ–π, –∫—Ä–µ—Å—Ç–∏–∫–∏ –¥–ª—è –ø–ª–∏—Ç–∫–∏",
            icon: "üß¥",
            is_main: false,
            parent_id: "tiles",
            properties: [
              { key: "name", name: "–ù–∞–∑–≤–∞–Ω–∏–µ", type: "text", required: true },
              { key: "type", name: "–¢–∏–ø", type: "text", required: true },
              { key: "price_rrc", name: "–¶–µ–Ω–∞ –†–†–¶", type: "number", required: true }
            ],
            import_mapping: {
              "name": "name",
              "type": "type",
              "price_rrc": "price_rrc"
            }
          }
        ],
        created_at: "2025-01-15T10:00:00Z",
        updated_at: "2025-01-15T10:00:00Z"
      }
    ];

    return NextResponse.json({
      categories,
      total: categories.length,
      message: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤ (–¥–µ–º–æ-—Ä–µ–∂–∏–º)"
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    return NextResponse.json(
      { error: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π" },
      { status: 500 }
    );
  }
}

export async function POST(req: NextRequest) {
  try {
    const body = await req.json();
    const { name, description, icon, properties, import_mapping } = body;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!name || !properties || !Array.isArray(properties)) {
      return NextResponse.json(
        { error: "–ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" },
        { status: 400 }
      );
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    const id = name.toLowerCase().replace(/[^a-z0-9]/g, '-').replace(/-+/g, '-').replace(/^-|-$/g, '');

    // –í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    const newCategory = {
      id,
      name,
      description: description || "",
      icon: icon || "üì¶",
      properties,
      import_mapping: import_mapping || {},
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    };

    return NextResponse.json({
      message: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ (–¥–µ–º–æ-—Ä–µ–∂–∏–º)",
      category: newCategory
    }, { status: 201 });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
    return NextResponse.json(
      { error: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" },
      { status: 500 }
    );
  }
}
